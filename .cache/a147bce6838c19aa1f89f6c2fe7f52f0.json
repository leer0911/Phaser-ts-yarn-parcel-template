{"dependencies":[{"name":"C:\\Users\\polfe\\Desktop\\phaser-game\\node_modules\\phaser\\package.json","includedInParent":true,"mtime":1528894237000},{"name":"C:\\Users\\polfe\\Desktop\\phaser-game\\package.json","includedInParent":true,"mtime":1530467158402},{"name":"../../utils/Class","loc":{"line":7,"column":20},"parent":"C:\\Users\\polfe\\Desktop\\phaser-game\\node_modules\\phaser\\src\\loader\\filetypes\\AnimationJSONFile.js","resolved":"C:\\Users\\polfe\\Desktop\\phaser-game\\node_modules\\phaser\\src\\utils\\Class.js"},{"name":"../FileTypesManager","loc":{"line":8,"column":31},"parent":"C:\\Users\\polfe\\Desktop\\phaser-game\\node_modules\\phaser\\src\\loader\\filetypes\\AnimationJSONFile.js","resolved":"C:\\Users\\polfe\\Desktop\\phaser-game\\node_modules\\phaser\\src\\loader\\FileTypesManager.js"},{"name":"./JSONFile.js","loc":{"line":9,"column":23},"parent":"C:\\Users\\polfe\\Desktop\\phaser-game\\node_modules\\phaser\\src\\loader\\filetypes\\AnimationJSONFile.js","resolved":"C:\\Users\\polfe\\Desktop\\phaser-game\\node_modules\\phaser\\src\\loader\\filetypes\\JSONFile.js"}],"generated":{"js":"var e=require(\"../../utils/Class\"),i=require(\"../FileTypesManager\"),t=require(\"./JSONFile.js\"),s=new e({Extends:t,initialize:function(e,i,s,n,o){t.call(this,e,i,s,n,o),this.type=\"animationJSON\"},onProcess:function(){this.loader.once(\"loadcomplete\",this.onLoadComplete,this),t.prototype.onProcess.call(this)},onLoadComplete:function(){this.loader.systems.anims.fromJSON(this.data),this.pendingDestroy()}});i.register(\"animation\",function(e,i,t,n){if(Array.isArray(e))for(var o=0;o<e.length;o++)this.addFile(new s(this,e[o]));else this.addFile(new s(this,e,i,n,t));return this}),module.exports=s;","map":{"mappings":[{"source":"node_modules\\phaser\\src\\loader\\filetypes\\AnimationJSONFile.js","original":{"line":7,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules\\phaser\\src\\loader\\filetypes\\AnimationJSONFile.js","original":{"line":7,"column":0},"generated":{"line":1,"column":4}},{"source":"node_modules\\phaser\\src\\loader\\filetypes\\AnimationJSONFile.js","original":{"line":7,"column":0},"generated":{"line":1,"column":6}},{"source":"node_modules\\phaser\\src\\loader\\filetypes\\AnimationJSONFile.js","original":{"line":7,"column":0},"generated":{"line":1,"column":14}},{"source":"node_modules\\phaser\\src\\loader\\filetypes\\AnimationJSONFile.js","original":{"line":8,"column":0},"generated":{"line":1,"column":35}},{"source":"node_modules\\phaser\\src\\loader\\filetypes\\AnimationJSONFile.js","original":{"line":8,"column":0},"generated":{"line":1,"column":37}},{"source":"node_modules\\phaser\\src\\loader\\filetypes\\AnimationJSONFile.js","original":{"line":8,"column":0},"generated":{"line":1,"column":45}},{"source":"node_modules\\phaser\\src\\loader\\filetypes\\AnimationJSONFile.js","original":{"line":9,"column":0},"generated":{"line":1,"column":68}},{"source":"node_modules\\phaser\\src\\loader\\filetypes\\AnimationJSONFile.js","original":{"line":9,"column":0},"generated":{"line":1,"column":70}},{"source":"node_modules\\phaser\\src\\loader\\filetypes\\AnimationJSONFile.js","original":{"line":9,"column":0},"generated":{"line":1,"column":78}},{"source":"node_modules\\phaser\\src\\loader\\filetypes\\AnimationJSONFile.js","original":{"line":31,"column":0},"generated":{"line":1,"column":95}},{"source":"node_modules\\phaser\\src\\loader\\filetypes\\AnimationJSONFile.js","original":{"line":31,"column":0},"generated":{"line":1,"column":97}},{"source":"node_modules\\phaser\\src\\loader\\filetypes\\AnimationJSONFile.js","original":{"line":31,"column":0},"generated":{"line":1,"column":101}},{"source":"node_modules\\phaser\\src\\loader\\filetypes\\AnimationJSONFile.js","original":{"line":33,"column":0},"generated":{"line":1,"column":104}},{"source":"node_modules\\phaser\\src\\loader\\filetypes\\AnimationJSONFile.js","original":{"line":33,"column":0},"generated":{"line":1,"column":112}},{"source":"node_modules\\phaser\\src\\loader\\filetypes\\AnimationJSONFile.js","original":{"line":35,"column":0},"generated":{"line":1,"column":114}},{"source":"node_modules\\phaser\\src\\loader\\filetypes\\AnimationJSONFile.js","original":{"line":40,"column":0},"generated":{"line":1,"column":125}},{"source":"node_modules\\phaser\\src\\loader\\filetypes\\AnimationJSONFile.js","original":{"line":40,"column":0},"generated":{"line":1,"column":134}},{"source":"node_modules\\phaser\\src\\loader\\filetypes\\AnimationJSONFile.js","original":{"line":40,"column":0},"generated":{"line":1,"column":136}},{"source":"node_modules\\phaser\\src\\loader\\filetypes\\AnimationJSONFile.js","original":{"line":40,"column":0},"generated":{"line":1,"column":138}},{"source":"node_modules\\phaser\\src\\loader\\filetypes\\AnimationJSONFile.js","original":{"line":40,"column":0},"generated":{"line":1,"column":140}},{"source":"node_modules\\phaser\\src\\loader\\filetypes\\AnimationJSONFile.js","original":{"line":40,"column":0},"generated":{"line":1,"column":142}},{"source":"node_modules\\phaser\\src\\loader\\filetypes\\AnimationJSONFile.js","original":{"line":42,"column":0},"generated":{"line":1,"column":145}},{"source":"node_modules\\phaser\\src\\loader\\filetypes\\AnimationJSONFile.js","original":{"line":42,"column":0},"generated":{"line":1,"column":147}},{"source":"node_modules\\phaser\\src\\loader\\filetypes\\AnimationJSONFile.js","original":{"line":42,"column":0},"generated":{"line":1,"column":152}},{"source":"node_modules\\phaser\\src\\loader\\filetypes\\AnimationJSONFile.js","original":{"line":42,"column":0},"generated":{"line":1,"column":157}},{"source":"node_modules\\phaser\\src\\loader\\filetypes\\AnimationJSONFile.js","original":{"line":42,"column":0},"generated":{"line":1,"column":159}},{"source":"node_modules\\phaser\\src\\loader\\filetypes\\AnimationJSONFile.js","original":{"line":42,"column":0},"generated":{"line":1,"column":161}},{"source":"node_modules\\phaser\\src\\loader\\filetypes\\AnimationJSONFile.js","original":{"line":42,"column":0},"generated":{"line":1,"column":163}},{"source":"node_modules\\phaser\\src\\loader\\filetypes\\AnimationJSONFile.js","original":{"line":42,"column":0},"generated":{"line":1,"column":165}},{"source":"node_modules\\phaser\\src\\loader\\filetypes\\AnimationJSONFile.js","original":{"line":44,"column":0},"generated":{"line":1,"column":168}},{"source":"node_modules\\phaser\\src\\loader\\filetypes\\AnimationJSONFile.js","original":{"line":44,"column":0},"generated":{"line":1,"column":173}},{"source":"node_modules\\phaser\\src\\loader\\filetypes\\AnimationJSONFile.js","original":{"line":44,"column":0},"generated":{"line":1,"column":178}},{"source":"node_modules\\phaser\\src\\loader\\filetypes\\AnimationJSONFile.js","original":{"line":54,"column":0},"generated":{"line":1,"column":195}},{"source":"node_modules\\phaser\\src\\loader\\filetypes\\AnimationJSONFile.js","original":{"line":54,"column":0},"generated":{"line":1,"column":205}},{"source":"node_modules\\phaser\\src\\loader\\filetypes\\AnimationJSONFile.js","original":{"line":57,"column":0},"generated":{"line":1,"column":216}},{"source":"node_modules\\phaser\\src\\loader\\filetypes\\AnimationJSONFile.js","original":{"line":57,"column":0},"generated":{"line":1,"column":221}},{"source":"node_modules\\phaser\\src\\loader\\filetypes\\AnimationJSONFile.js","original":{"line":57,"column":0},"generated":{"line":1,"column":228}},{"source":"node_modules\\phaser\\src\\loader\\filetypes\\AnimationJSONFile.js","original":{"line":57,"column":0},"generated":{"line":1,"column":233}},{"source":"node_modules\\phaser\\src\\loader\\filetypes\\AnimationJSONFile.js","original":{"line":57,"column":0},"generated":{"line":1,"column":248}},{"source":"node_modules\\phaser\\src\\loader\\filetypes\\AnimationJSONFile.js","original":{"line":57,"column":0},"generated":{"line":1,"column":253}},{"source":"node_modules\\phaser\\src\\loader\\filetypes\\AnimationJSONFile.js","original":{"line":57,"column":0},"generated":{"line":1,"column":268}},{"source":"node_modules\\phaser\\src\\loader\\filetypes\\AnimationJSONFile.js","original":{"line":60,"column":0},"generated":{"line":1,"column":274}},{"source":"node_modules\\phaser\\src\\loader\\filetypes\\AnimationJSONFile.js","original":{"line":60,"column":0},"generated":{"line":1,"column":276}},{"source":"node_modules\\phaser\\src\\loader\\filetypes\\AnimationJSONFile.js","original":{"line":60,"column":0},"generated":{"line":1,"column":286}},{"source":"node_modules\\phaser\\src\\loader\\filetypes\\AnimationJSONFile.js","original":{"line":60,"column":0},"generated":{"line":1,"column":296}},{"source":"node_modules\\phaser\\src\\loader\\filetypes\\AnimationJSONFile.js","original":{"line":60,"column":0},"generated":{"line":1,"column":301}},{"source":"node_modules\\phaser\\src\\loader\\filetypes\\AnimationJSONFile.js","original":{"line":69,"column":0},"generated":{"line":1,"column":308}},{"source":"node_modules\\phaser\\src\\loader\\filetypes\\AnimationJSONFile.js","original":{"line":69,"column":0},"generated":{"line":1,"column":323}},{"source":"node_modules\\phaser\\src\\loader\\filetypes\\AnimationJSONFile.js","original":{"line":71,"column":0},"generated":{"line":1,"column":334}},{"source":"node_modules\\phaser\\src\\loader\\filetypes\\AnimationJSONFile.js","original":{"line":71,"column":0},"generated":{"line":1,"column":339}},{"source":"node_modules\\phaser\\src\\loader\\filetypes\\AnimationJSONFile.js","original":{"line":71,"column":0},"generated":{"line":1,"column":346}},{"source":"node_modules\\phaser\\src\\loader\\filetypes\\AnimationJSONFile.js","original":{"line":71,"column":0},"generated":{"line":1,"column":354}},{"source":"node_modules\\phaser\\src\\loader\\filetypes\\AnimationJSONFile.js","original":{"line":71,"column":0},"generated":{"line":1,"column":360}},{"source":"node_modules\\phaser\\src\\loader\\filetypes\\AnimationJSONFile.js","original":{"line":71,"column":0},"generated":{"line":1,"column":369}},{"source":"node_modules\\phaser\\src\\loader\\filetypes\\AnimationJSONFile.js","original":{"line":71,"column":0},"generated":{"line":1,"column":374}},{"source":"node_modules\\phaser\\src\\loader\\filetypes\\AnimationJSONFile.js","original":{"line":73,"column":0},"generated":{"line":1,"column":380}},{"source":"node_modules\\phaser\\src\\loader\\filetypes\\AnimationJSONFile.js","original":{"line":73,"column":0},"generated":{"line":1,"column":385}},{"source":"node_modules\\phaser\\src\\loader\\filetypes\\AnimationJSONFile.js","original":{"line":175,"column":0},"generated":{"line":1,"column":405}},{"source":"node_modules\\phaser\\src\\loader\\filetypes\\AnimationJSONFile.js","original":{"line":175,"column":0},"generated":{"line":1,"column":407}},{"source":"node_modules\\phaser\\src\\loader\\filetypes\\AnimationJSONFile.js","original":{"line":175,"column":0},"generated":{"line":1,"column":416}},{"source":"node_modules\\phaser\\src\\loader\\filetypes\\AnimationJSONFile.js","original":{"line":175,"column":0},"generated":{"line":1,"column":428}},{"source":"node_modules\\phaser\\src\\loader\\filetypes\\AnimationJSONFile.js","original":{"line":175,"column":0},"generated":{"line":1,"column":437}},{"source":"node_modules\\phaser\\src\\loader\\filetypes\\AnimationJSONFile.js","original":{"line":175,"column":0},"generated":{"line":1,"column":439}},{"source":"node_modules\\phaser\\src\\loader\\filetypes\\AnimationJSONFile.js","original":{"line":175,"column":0},"generated":{"line":1,"column":441}},{"source":"node_modules\\phaser\\src\\loader\\filetypes\\AnimationJSONFile.js","original":{"line":175,"column":0},"generated":{"line":1,"column":443}},{"source":"node_modules\\phaser\\src\\loader\\filetypes\\AnimationJSONFile.js","original":{"line":181,"column":0},"generated":{"line":1,"column":446}},{"source":"node_modules\\phaser\\src\\loader\\filetypes\\AnimationJSONFile.js","original":{"line":181,"column":0},"generated":{"line":1,"column":449}},{"source":"node_modules\\phaser\\src\\loader\\filetypes\\AnimationJSONFile.js","original":{"line":181,"column":0},"generated":{"line":1,"column":455}},{"source":"node_modules\\phaser\\src\\loader\\filetypes\\AnimationJSONFile.js","original":{"line":181,"column":0},"generated":{"line":1,"column":463}},{"source":"node_modules\\phaser\\src\\loader\\filetypes\\AnimationJSONFile.js","original":{"line":183,"column":0},"generated":{"line":1,"column":466}},{"source":"node_modules\\phaser\\src\\loader\\filetypes\\AnimationJSONFile.js","original":{"line":183,"column":0},"generated":{"line":1,"column":470}},{"source":"node_modules\\phaser\\src\\loader\\filetypes\\AnimationJSONFile.js","original":{"line":183,"column":0},"generated":{"line":1,"column":474}},{"source":"node_modules\\phaser\\src\\loader\\filetypes\\AnimationJSONFile.js","original":{"line":183,"column":0},"generated":{"line":1,"column":476}},{"source":"node_modules\\phaser\\src\\loader\\filetypes\\AnimationJSONFile.js","original":{"line":183,"column":0},"generated":{"line":1,"column":478}},{"source":"node_modules\\phaser\\src\\loader\\filetypes\\AnimationJSONFile.js","original":{"line":183,"column":0},"generated":{"line":1,"column":480}},{"source":"node_modules\\phaser\\src\\loader\\filetypes\\AnimationJSONFile.js","original":{"line":183,"column":0},"generated":{"line":1,"column":482}},{"source":"node_modules\\phaser\\src\\loader\\filetypes\\AnimationJSONFile.js","original":{"line":183,"column":0},"generated":{"line":1,"column":489}},{"source":"node_modules\\phaser\\src\\loader\\filetypes\\AnimationJSONFile.js","original":{"line":185,"column":0},"generated":{"line":1,"column":493}},{"source":"node_modules\\phaser\\src\\loader\\filetypes\\AnimationJSONFile.js","original":{"line":185,"column":0},"generated":{"line":1,"column":498}},{"source":"node_modules\\phaser\\src\\loader\\filetypes\\AnimationJSONFile.js","original":{"line":185,"column":0},"generated":{"line":1,"column":506}},{"source":"node_modules\\phaser\\src\\loader\\filetypes\\AnimationJSONFile.js","original":{"line":185,"column":0},"generated":{"line":1,"column":510}},{"source":"node_modules\\phaser\\src\\loader\\filetypes\\AnimationJSONFile.js","original":{"line":185,"column":0},"generated":{"line":1,"column":512}},{"source":"node_modules\\phaser\\src\\loader\\filetypes\\AnimationJSONFile.js","original":{"line":185,"column":0},"generated":{"line":1,"column":517}},{"source":"node_modules\\phaser\\src\\loader\\filetypes\\AnimationJSONFile.js","original":{"line":185,"column":0},"generated":{"line":1,"column":519}},{"source":"node_modules\\phaser\\src\\loader\\filetypes\\AnimationJSONFile.js","original":{"line":190,"column":0},"generated":{"line":1,"column":529}},{"source":"node_modules\\phaser\\src\\loader\\filetypes\\AnimationJSONFile.js","original":{"line":190,"column":0},"generated":{"line":1,"column":534}},{"source":"node_modules\\phaser\\src\\loader\\filetypes\\AnimationJSONFile.js","original":{"line":190,"column":0},"generated":{"line":1,"column":542}},{"source":"node_modules\\phaser\\src\\loader\\filetypes\\AnimationJSONFile.js","original":{"line":190,"column":0},"generated":{"line":1,"column":546}},{"source":"node_modules\\phaser\\src\\loader\\filetypes\\AnimationJSONFile.js","original":{"line":190,"column":0},"generated":{"line":1,"column":548}},{"source":"node_modules\\phaser\\src\\loader\\filetypes\\AnimationJSONFile.js","original":{"line":190,"column":0},"generated":{"line":1,"column":553}},{"source":"node_modules\\phaser\\src\\loader\\filetypes\\AnimationJSONFile.js","original":{"line":190,"column":0},"generated":{"line":1,"column":555}},{"source":"node_modules\\phaser\\src\\loader\\filetypes\\AnimationJSONFile.js","original":{"line":190,"column":0},"generated":{"line":1,"column":557}},{"source":"node_modules\\phaser\\src\\loader\\filetypes\\AnimationJSONFile.js","original":{"line":190,"column":0},"generated":{"line":1,"column":559}},{"source":"node_modules\\phaser\\src\\loader\\filetypes\\AnimationJSONFile.js","original":{"line":193,"column":0},"generated":{"line":1,"column":563}},{"source":"node_modules\\phaser\\src\\loader\\filetypes\\AnimationJSONFile.js","original":{"line":193,"column":0},"generated":{"line":1,"column":570}},{"source":"node_modules\\phaser\\src\\loader\\filetypes\\AnimationJSONFile.js","original":{"line":196,"column":0},"generated":{"line":1,"column":577}},{"source":"node_modules\\phaser\\src\\loader\\filetypes\\AnimationJSONFile.js","original":{"line":196,"column":0},"generated":{"line":1,"column":584}},{"source":"node_modules\\phaser\\src\\loader\\filetypes\\AnimationJSONFile.js","original":{"line":196,"column":0},"generated":{"line":1,"column":592}}],"sources":{"node_modules\\phaser\\src\\loader\\filetypes\\AnimationJSONFile.js":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\nvar Class = require('../../utils/Class');\r\nvar FileTypesManager = require('../FileTypesManager');\r\nvar JSONFile = require('./JSONFile.js');\r\n\r\n/**\r\n * @classdesc\r\n * A single Animation JSON File suitable for loading by the Loader.\r\n *\r\n * These are created when you use the Phaser.Loader.LoaderPlugin#animation method and are not typically created directly.\r\n * \r\n * For documentation about what all the arguments and configuration options mean please see Phaser.Loader.LoaderPlugin#animation.\r\n *\r\n * @class AnimationJSONFile\r\n * @extends Phaser.Loader.File\r\n * @memberOf Phaser.Loader.FileTypes\r\n * @constructor\r\n * @since 3.0.0\r\n *\r\n * @param {Phaser.Loader.LoaderPlugin} loader - A reference to the Loader that is responsible for this file.\r\n * @param {(string|Phaser.Loader.FileTypes.JSONFileConfig)} key - The key to use for this file, or a file configuration object.\r\n * @param {string} [url] - The absolute or relative URL to load this file from. If undefined or `null` it will be set to `<key>.json`, i.e. if `key` was \"alien\" then the URL will be \"alien.json\".\r\n * @param {XHRSettingsObject} [xhrSettings] - Extra XHR Settings specifically for this file.\r\n * @param {string} [dataKey] - When the JSON file loads only this property will be stored in the Cache.\r\n */\r\nvar AnimationJSONFile = new Class({\r\n\r\n    Extends: JSONFile,\r\n\r\n    initialize:\r\n\r\n    //  url can either be a string, in which case it is treated like a proper url, or an object, in which case it is treated as a ready-made JS Object\r\n    //  dataKey allows you to pluck a specific object out of the JSON and put just that into the cache, rather than the whole thing\r\n\r\n    function AnimationJSONFile (loader, key, url, xhrSettings, dataKey)\r\n    {\r\n        JSONFile.call(this, loader, key, url, xhrSettings, dataKey);\r\n\r\n        this.type = 'animationJSON';\r\n    },\r\n\r\n    /**\r\n     * Called automatically by Loader.nextFile.\r\n     * This method controls what extra work this File does with its loaded data.\r\n     *\r\n     * @method Phaser.Loader.FileTypes.AnimationJSONFile#onProcess\r\n     * @since 3.7.0\r\n     */\r\n    onProcess: function ()\r\n    {\r\n        //  We need to hook into this event:\r\n        this.loader.once('loadcomplete', this.onLoadComplete, this);\r\n\r\n        //  But the rest is the same as a normal JSON file\r\n        JSONFile.prototype.onProcess.call(this);\r\n    },\r\n\r\n    /**\r\n     * Called at the end of the load process, after the Loader has finished all files in its queue.\r\n     *\r\n     * @method Phaser.Loader.FileTypes.AnimationJSONFile#onLoadComplete\r\n     * @since 3.7.0\r\n     */\r\n    onLoadComplete: function ()\r\n    {\r\n        this.loader.systems.anims.fromJSON(this.data);\r\n\r\n        this.pendingDestroy();\r\n    }\r\n\r\n});\r\n\r\n/**\r\n * Adds an Animation JSON Data file, or array of Animation JSON files, to the current load queue.\r\n *\r\n * You can call this method from within your Scene's `preload`, along with any other files you wish to load:\r\n * \r\n * ```javascript\r\n * function preload ()\r\n * {\r\n *     this.load.animation('baddieAnims', 'files/BaddieAnims.json');\r\n * }\r\n * ```\r\n *\r\n * The file is **not** loaded right away. It is added to a queue ready to be loaded either when the loader starts,\r\n * or if it's already running, when the next free load slot becomes available. This happens automatically if you\r\n * are calling this from within the Scene's `preload` method, or a related callback. Because the file is queued\r\n * it means you cannot use the file immediately after calling this method, but must wait for the file to complete.\r\n * The typical flow for a Phaser Scene is that you load assets in the Scene's `preload` method and then when the\r\n * Scene's `create` method is called you are guaranteed that all of those assets are ready for use and have been\r\n * loaded.\r\n * \r\n * If you call this from outside of `preload` then you are responsible for starting the Loader afterwards and monitoring\r\n * its events to know when it's safe to use the asset. Please see the Phaser.Loader.LoaderPlugin class for more details.\r\n * \r\n * The key must be a unique String. It is used to add the file to the global JSON Cache upon a successful load.\r\n * The key should be unique both in terms of files being loaded and files already present in the JSON Cache.\r\n * Loading a file using a key that is already taken will result in a warning. If you wish to replace an existing file\r\n * then remove it from the JSON Cache first, before loading a new one.\r\n *\r\n * Instead of passing arguments you can pass a configuration object, such as:\r\n * \r\n * ```javascript\r\n * this.load.animation({\r\n *     key: 'baddieAnims',\r\n *     url: 'files/BaddieAnims.json'\r\n * });\r\n * ```\r\n *\r\n * See the documentation for `Phaser.Loader.FileTypes.JSONFileConfig` for more details.\r\n *\r\n * Once the file has finished loading it will automatically be passed to the global Animation Managers `fromJSON` method.\r\n * This will parse all of the JSON data and create animation data from it. This process happens at the very end\r\n * of the Loader, once every other file in the load queue has finished. The reason for this is to allow you to load\r\n * both animation data and the images it relies upon in the same load call.\r\n *\r\n * Once the animation data has been parsed you will be able to play animations using that data.\r\n * Please see the Animation Manager `fromJSON` method for more details about the format and playback.\r\n * \r\n * You can also access the raw animation data from its Cache using its key:\r\n * \r\n * ```javascript\r\n * this.load.animation('baddieAnims', 'files/BaddieAnims.json');\r\n * // and later in your game ...\r\n * var data = this.cache.json.get('baddieAnims');\r\n * ```\r\n *\r\n * If you have specified a prefix in the loader, via `Loader.setPrefix` then this value will be prepended to this files\r\n * key. For example, if the prefix was `LEVEL1.` and the key was `Waves` the final key will be `LEVEL1.Waves` and\r\n * this is what you would use to retrieve the text from the JSON Cache.\r\n *\r\n * The URL can be relative or absolute. If the URL is relative the `Loader.baseURL` and `Loader.path` values will be prepended to it.\r\n *\r\n * If the URL isn't specified the Loader will take the key and create a filename from that. For example if the key is \"data\"\r\n * and no URL is given then the Loader will set the URL to be \"data.json\". It will always add `.json` as the extension, although\r\n * this can be overridden if using an object instead of method arguments. If you do not desire this action then provide a URL.\r\n *\r\n * You can also optionally provide a `dataKey` to use. This allows you to extract only a part of the JSON and store it in the Cache,\r\n * rather than the whole file. For example, if your JSON data had a structure like this:\r\n * \r\n * ```json\r\n * {\r\n *     \"level1\": {\r\n *         \"baddies\": {\r\n *             \"aliens\": {},\r\n *             \"boss\": {}\r\n *         }\r\n *     },\r\n *     \"level2\": {},\r\n *     \"level3\": {}\r\n * }\r\n * ```\r\n *\r\n * And if you only wanted to create animations from the `boss` data, then you could pass `level1.baddies.boss`as the `dataKey`.\r\n *\r\n * Note: The ability to load this type of file will only be available if the JSON File type has been built into Phaser.\r\n * It is available in the default build but can be excluded from custom builds.\r\n *\r\n * @method Phaser.Loader.LoaderPlugin#animation\r\n * @fires Phaser.Loader.LoaderPlugin#addFileEvent\r\n * @since 3.0.0\r\n *\r\n * @param {(string|Phaser.Loader.FileTypes.JSONFileConfig|Phaser.Loader.FileTypes.JSONFileConfig[])} key - The key to use for this file, or a file configuration object, or array of them.\r\n * @param {string} [url] - The absolute or relative URL to load this file from. If undefined or `null` it will be set to `<key>.json`, i.e. if `key` was \"alien\" then the URL will be \"alien.json\".\r\n * @param {string} [dataKey] - When the Animation JSON file loads only this property will be stored in the Cache and used to create animation data.\r\n * @param {XHRSettingsObject} [xhrSettings] - An XHR Settings configuration object. Used in replacement of the Loaders default XHR Settings.\r\n *\r\n * @return {Phaser.Loader.LoaderPlugin} The Loader instance.\r\n */\r\nFileTypesManager.register('animation', function (key, url, dataKey, xhrSettings)\r\n{\r\n    //  Supports an Object file definition in the key argument\r\n    //  Or an array of objects in the key argument\r\n    //  Or a single entry where all arguments have been defined\r\n\r\n    if (Array.isArray(key))\r\n    {\r\n        for (var i = 0; i < key.length; i++)\r\n        {\r\n            this.addFile(new AnimationJSONFile(this, key[i]));\r\n        }\r\n    }\r\n    else\r\n    {\r\n        this.addFile(new AnimationJSONFile(this, key, url, xhrSettings, dataKey));\r\n    }\r\n\r\n    return this;\r\n});\r\n\r\nmodule.exports = AnimationJSONFile;\r\n"},"lineCount":null}},"hash":"bdb870485a0ef515edb9ca5f1e21c565","cacheData":{"env":{}},"id":852}