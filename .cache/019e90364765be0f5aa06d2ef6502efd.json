{"dependencies":[{"name":"C:\\Users\\polfe\\Desktop\\phaser-game\\node_modules\\phaser\\package.json","includedInParent":true,"mtime":1528894237000},{"name":"C:\\Users\\polfe\\Desktop\\phaser-game\\package.json","includedInParent":true,"mtime":1530467158402}],"generated":{"js":"var t=function(t,a,n){return Math.max(a,Math.min(n,t))};module.exports=t;","map":{"mappings":[{"source":"node_modules\\phaser\\src\\math\\Clamp.js","original":{"line":19,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules\\phaser\\src\\math\\Clamp.js","original":{"line":19,"column":0},"generated":{"line":1,"column":4}},{"source":"node_modules\\phaser\\src\\math\\Clamp.js","original":{"line":19,"column":0},"generated":{"line":1,"column":6}},{"source":"node_modules\\phaser\\src\\math\\Clamp.js","original":{"line":19,"column":0},"generated":{"line":1,"column":15}},{"source":"node_modules\\phaser\\src\\math\\Clamp.js","original":{"line":19,"column":0},"generated":{"line":1,"column":17}},{"source":"node_modules\\phaser\\src\\math\\Clamp.js","original":{"line":19,"column":0},"generated":{"line":1,"column":19}},{"source":"node_modules\\phaser\\src\\math\\Clamp.js","original":{"line":21,"column":0},"generated":{"line":1,"column":22}},{"source":"node_modules\\phaser\\src\\math\\Clamp.js","original":{"line":21,"column":0},"generated":{"line":1,"column":29}},{"source":"node_modules\\phaser\\src\\math\\Clamp.js","original":{"line":21,"column":0},"generated":{"line":1,"column":34}},{"source":"node_modules\\phaser\\src\\math\\Clamp.js","original":{"line":21,"column":0},"generated":{"line":1,"column":38}},{"source":"node_modules\\phaser\\src\\math\\Clamp.js","original":{"line":21,"column":0},"generated":{"line":1,"column":40}},{"source":"node_modules\\phaser\\src\\math\\Clamp.js","original":{"line":21,"column":0},"generated":{"line":1,"column":45}},{"source":"node_modules\\phaser\\src\\math\\Clamp.js","original":{"line":21,"column":0},"generated":{"line":1,"column":49}},{"source":"node_modules\\phaser\\src\\math\\Clamp.js","original":{"line":21,"column":0},"generated":{"line":1,"column":51}},{"source":"node_modules\\phaser\\src\\math\\Clamp.js","original":{"line":24,"column":0},"generated":{"line":1,"column":56}},{"source":"node_modules\\phaser\\src\\math\\Clamp.js","original":{"line":24,"column":0},"generated":{"line":1,"column":63}},{"source":"node_modules\\phaser\\src\\math\\Clamp.js","original":{"line":24,"column":0},"generated":{"line":1,"column":71}}],"sources":{"node_modules\\phaser\\src\\math\\Clamp.js":"/**\n * @author       Richard Davey <rich@photonstorm.com>\n * @copyright    2018 Photon Storm Ltd.\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\n */\n\n/**\r\n * Force a value within the boundaries by clamping it to the range `min`, `max`.\r\n *\r\n * @function Phaser.Math.Clamp\r\n * @since 3.0.0\r\n *\r\n * @param {number} value - The value to be clamped.\r\n * @param {number} min - The minimum bounds.\r\n * @param {number} max - The maximum bounds.\r\n *\r\n * @return {number} The clamped value.\r\n */\r\nvar Clamp = function (value, min, max)\r\n{\r\n    return Math.max(min, Math.min(max, value));\r\n};\r\n\r\nmodule.exports = Clamp;\r\n"},"lineCount":null}},"hash":"fb333f4ee36a7b02cff825c7400c3e83","cacheData":{"env":{}},"id":206}