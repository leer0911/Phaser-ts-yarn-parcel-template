{"dependencies":[{"name":"C:\\Users\\polfe\\Desktop\\phaser-game\\node_modules\\phaser\\package.json","includedInParent":true,"mtime":1528894237000},{"name":"C:\\Users\\polfe\\Desktop\\phaser-game\\package.json","includedInParent":true,"mtime":1530467158402},{"name":"../../utils/Class","loc":{"line":7,"column":20},"parent":"C:\\Users\\polfe\\Desktop\\phaser-game\\node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","resolved":"C:\\Users\\polfe\\Desktop\\phaser-game\\node_modules\\phaser\\src\\utils\\Class.js"},{"name":"../../gameobjects/components","loc":{"line":8,"column":25},"parent":"C:\\Users\\polfe\\Desktop\\phaser-game\\node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","resolved":"C:\\Users\\polfe\\Desktop\\phaser-game\\node_modules\\phaser\\src\\gameobjects\\components\\index.js"},{"name":"./DynamicTilemapLayerRender","loc":{"line":9,"column":40},"parent":"C:\\Users\\polfe\\Desktop\\phaser-game\\node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","resolved":"C:\\Users\\polfe\\Desktop\\phaser-game\\node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayerRender.js"},{"name":"../../gameobjects/GameObject","loc":{"line":10,"column":25},"parent":"C:\\Users\\polfe\\Desktop\\phaser-game\\node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","resolved":"C:\\Users\\polfe\\Desktop\\phaser-game\\node_modules\\phaser\\src\\gameobjects\\GameObject.js"},{"name":"../components","loc":{"line":11,"column":32},"parent":"C:\\Users\\polfe\\Desktop\\phaser-game\\node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","resolved":"C:\\Users\\polfe\\Desktop\\phaser-game\\node_modules\\phaser\\src\\tilemaps\\components\\index.js"}],"generated":{"js":"var e=require(\"../../utils/Class\"),i=require(\"../../gameobjects/components\"),t=require(\"./DynamicTilemapLayerRender\"),l=require(\"../../gameobjects/GameObject\"),r=require(\"../components\"),n=new e({Extends:l,Mixins:[i.Alpha,i.BlendMode,i.ComputedSize,i.Depth,i.Flip,i.GetBounds,i.Origin,i.Pipeline,i.ScaleMode,i.Transform,i.Visible,i.ScrollFactor,t],initialize:function(e,i,t,r,n,s){l.call(this,e,\"DynamicTilemapLayer\"),this.isTilemap=!0,this.tilemap=i,this.layerIndex=t,this.layer=i.layers[t],this.layer.tilemapLayer=this,this.tileset=r,this.culledTiles=[],this.setAlpha(this.layer.alpha),this.setPosition(n,s),this.setOrigin(),this.setSize(this.layer.tileWidth*this.layer.width,this.layer.tileHeight*this.layer.height),this.initPipeline(\"TextureTintPipeline\")},calculateFacesAt:function(e,i){return r.CalculateFacesAt(e,i,this.layer),this},calculateFacesWithin:function(e,i,t,l){return r.CalculateFacesWithin(e,i,t,l,this.layer),this},createFromTiles:function(e,i,t,l,n){return r.CreateFromTiles(e,i,t,l,n,this.layer)},cull:function(e){return r.CullTiles(this.layer,e,this.culledTiles)},copy:function(e,i,t,l,n,s,o){return r.Copy(e,i,t,l,n,s,o,this.layer),this},destroy:function(){this.layer.tilemapLayer===this&&(this.layer.tilemapLayer=void 0),this.tilemap=void 0,this.layer=void 0,this.tileset=void 0,this.culledTiles.length=0,l.prototype.destroy.call(this)},fill:function(e,i,t,l,n,s){return r.Fill(e,i,t,l,n,s,this.layer),this},filterTiles:function(e,i,t,l,n,s,o){return r.FilterTiles(e,i,t,l,n,s,o,this.layer)},findByIndex:function(e,i,t){return r.FindByIndex(e,i,t,this.layer)},findTile:function(e,i,t,l,n,s,o){return r.FindTile(e,i,t,l,n,s,o,this.layer)},forEachTile:function(e,i,t,l,n,s,o){return r.ForEachTile(e,i,t,l,n,s,o,this.layer),this},getTileAt:function(e,i,t){return r.GetTileAt(e,i,t,this.layer)},getTileAtWorldXY:function(e,i,t,l){return r.GetTileAtWorldXY(e,i,t,l,this.layer)},getTilesWithin:function(e,i,t,l,n){return r.GetTilesWithin(e,i,t,l,n,this.layer)},getTilesWithinShape:function(e,i,t){return r.GetTilesWithinShape(e,i,t,this.layer)},getTilesWithinWorldXY:function(e,i,t,l,n,s){return r.GetTilesWithinWorldXY(e,i,t,l,n,s,this.layer)},hasTileAt:function(e,i){return r.HasTileAt(e,i,this.layer)},hasTileAtWorldXY:function(e,i,t){return r.HasTileAtWorldXY(e,i,t,this.layer)},putTileAt:function(e,i,t,l){return r.PutTileAt(e,i,t,l,this.layer)},putTileAtWorldXY:function(e,i,t,l,n){return r.PutTileAtWorldXY(e,i,t,l,n,this.layer)},putTilesAt:function(e,i,t,l){return r.PutTilesAt(e,i,t,l,this.layer),this},randomize:function(e,i,t,l,n){return r.Randomize(e,i,t,l,n,this.layer),this},removeTileAt:function(e,i,t,l){return r.RemoveTileAt(e,i,t,l,this.layer)},removeTileAtWorldXY:function(e,i,t,l,n){return r.RemoveTileAtWorldXY(e,i,t,l,n,this.layer)},renderDebug:function(e,i){return r.RenderDebug(e,i,this.layer),this},replaceByIndex:function(e,i,t,l,n,s){return r.ReplaceByIndex(e,i,t,l,n,s,this.layer),this},setCollision:function(e,i,t){return r.SetCollision(e,i,t,this.layer),this},setCollisionBetween:function(e,i,t,l){return r.SetCollisionBetween(e,i,t,l,this.layer),this},setCollisionByProperty:function(e,i,t){return r.SetCollisionByProperty(e,i,t,this.layer),this},setCollisionByExclusion:function(e,i,t){return r.SetCollisionByExclusion(e,i,t,this.layer),this},setCollisionFromCollisionGroup:function(e,i){return r.SetCollisionFromCollisionGroup(e,i,this.layer),this},setTileIndexCallback:function(e,i,t){return r.SetTileIndexCallback(e,i,t,this.layer),this},setTileLocationCallback:function(e,i,t,l,n,s){return r.SetTileLocationCallback(e,i,t,l,n,s,this.layer),this},shuffle:function(e,i,t,l){return r.Shuffle(e,i,t,l,this.layer),this},swapByIndex:function(e,i,t,l,n,s){return r.SwapByIndex(e,i,t,l,n,s,this.layer),this},tileToWorldX:function(e,i){return r.TileToWorldX(e,i,this.layer)},tileToWorldY:function(e,i){return r.TileToWorldY(e,i,this.layer)},tileToWorldXY:function(e,i,t,l){return r.TileToWorldXY(e,i,t,l,this.layer)},weightedRandomize:function(e,i,t,l,n){return r.WeightedRandomize(e,i,t,l,n,this.layer),this},worldToTileX:function(e,i,t){return r.WorldToTileX(e,i,t,this.layer)},worldToTileY:function(e,i,t){return r.WorldToTileY(e,i,t,this.layer)},worldToTileXY:function(e,i,t,l,n){return r.WorldToTileXY(e,i,t,l,n,this.layer)}});module.exports=n;","map":{"mappings":[{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":7,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":7,"column":0},"generated":{"line":1,"column":4}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":7,"column":0},"generated":{"line":1,"column":6}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":7,"column":0},"generated":{"line":1,"column":14}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":8,"column":0},"generated":{"line":1,"column":35}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":8,"column":0},"generated":{"line":1,"column":37}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":8,"column":0},"generated":{"line":1,"column":45}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":9,"column":0},"generated":{"line":1,"column":77}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":9,"column":0},"generated":{"line":1,"column":79}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":9,"column":0},"generated":{"line":1,"column":87}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":10,"column":0},"generated":{"line":1,"column":118}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":10,"column":0},"generated":{"line":1,"column":120}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":10,"column":0},"generated":{"line":1,"column":128}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":11,"column":0},"generated":{"line":1,"column":160}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":11,"column":0},"generated":{"line":1,"column":162}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":11,"column":0},"generated":{"line":1,"column":170}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":49,"column":0},"generated":{"line":1,"column":187}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":49,"column":0},"generated":{"line":1,"column":189}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":49,"column":0},"generated":{"line":1,"column":193}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":51,"column":0},"generated":{"line":1,"column":196}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":51,"column":0},"generated":{"line":1,"column":204}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":53,"column":0},"generated":{"line":1,"column":206}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":54,"column":0},"generated":{"line":1,"column":214}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":54,"column":0},"generated":{"line":1,"column":216}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":55,"column":0},"generated":{"line":1,"column":222}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":55,"column":0},"generated":{"line":1,"column":224}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":56,"column":0},"generated":{"line":1,"column":234}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":56,"column":0},"generated":{"line":1,"column":236}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":57,"column":0},"generated":{"line":1,"column":249}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":57,"column":0},"generated":{"line":1,"column":251}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":58,"column":0},"generated":{"line":1,"column":257}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":58,"column":0},"generated":{"line":1,"column":259}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":59,"column":0},"generated":{"line":1,"column":264}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":59,"column":0},"generated":{"line":1,"column":266}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":60,"column":0},"generated":{"line":1,"column":276}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":60,"column":0},"generated":{"line":1,"column":278}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":61,"column":0},"generated":{"line":1,"column":285}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":61,"column":0},"generated":{"line":1,"column":287}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":62,"column":0},"generated":{"line":1,"column":296}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":62,"column":0},"generated":{"line":1,"column":298}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":63,"column":0},"generated":{"line":1,"column":308}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":63,"column":0},"generated":{"line":1,"column":310}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":64,"column":0},"generated":{"line":1,"column":320}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":64,"column":0},"generated":{"line":1,"column":322}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":65,"column":0},"generated":{"line":1,"column":330}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":65,"column":0},"generated":{"line":1,"column":332}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":66,"column":0},"generated":{"line":1,"column":345}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":69,"column":0},"generated":{"line":1,"column":348}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":71,"column":0},"generated":{"line":1,"column":359}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":71,"column":0},"generated":{"line":1,"column":368}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":71,"column":0},"generated":{"line":1,"column":370}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":71,"column":0},"generated":{"line":1,"column":372}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":71,"column":0},"generated":{"line":1,"column":374}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":71,"column":0},"generated":{"line":1,"column":376}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":71,"column":0},"generated":{"line":1,"column":378}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":73,"column":0},"generated":{"line":1,"column":381}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":73,"column":0},"generated":{"line":1,"column":383}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":73,"column":0},"generated":{"line":1,"column":388}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":73,"column":0},"generated":{"line":1,"column":393}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":73,"column":0},"generated":{"line":1,"column":395}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":83,"column":0},"generated":{"line":1,"column":418}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":83,"column":0},"generated":{"line":1,"column":423}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":83,"column":0},"generated":{"line":1,"column":434}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":92,"column":0},"generated":{"line":1,"column":436}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":92,"column":0},"generated":{"line":1,"column":441}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":92,"column":0},"generated":{"line":1,"column":449}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":101,"column":0},"generated":{"line":1,"column":451}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":101,"column":0},"generated":{"line":1,"column":456}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":101,"column":0},"generated":{"line":1,"column":467}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":111,"column":0},"generated":{"line":1,"column":469}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":111,"column":0},"generated":{"line":1,"column":474}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":111,"column":0},"generated":{"line":1,"column":480}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":111,"column":0},"generated":{"line":1,"column":482}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":111,"column":0},"generated":{"line":1,"column":489}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":113,"column":0},"generated":{"line":1,"column":492}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":113,"column":0},"generated":{"line":1,"column":497}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":113,"column":0},"generated":{"line":1,"column":503}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":113,"column":0},"generated":{"line":1,"column":516}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":122,"column":0},"generated":{"line":1,"column":521}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":122,"column":0},"generated":{"line":1,"column":526}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":122,"column":0},"generated":{"line":1,"column":534}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":132,"column":0},"generated":{"line":1,"column":536}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":132,"column":0},"generated":{"line":1,"column":541}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":134,"column":0},"generated":{"line":1,"column":556}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":134,"column":0},"generated":{"line":1,"column":561}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":134,"column":0},"generated":{"line":1,"column":570}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":134,"column":0},"generated":{"line":1,"column":575}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":134,"column":0},"generated":{"line":1,"column":581}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":135,"column":0},"generated":{"line":1,"column":588}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":135,"column":0},"generated":{"line":1,"column":593}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":135,"column":0},"generated":{"line":1,"column":605}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":135,"column":0},"generated":{"line":1,"column":607}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":136,"column":0},"generated":{"line":1,"column":610}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":136,"column":0},"generated":{"line":1,"column":615}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":137,"column":0},"generated":{"line":1,"column":627}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":137,"column":0},"generated":{"line":1,"column":632}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":137,"column":0},"generated":{"line":1,"column":640}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":137,"column":0},"generated":{"line":1,"column":645}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":137,"column":0},"generated":{"line":1,"column":651}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":137,"column":0},"generated":{"line":1,"column":661}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":137,"column":0},"generated":{"line":1,"column":666}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":137,"column":0},"generated":{"line":1,"column":672}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":137,"column":0},"generated":{"line":1,"column":678}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":137,"column":0},"generated":{"line":1,"column":683}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":137,"column":0},"generated":{"line":1,"column":689}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":137,"column":0},"generated":{"line":1,"column":700}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":137,"column":0},"generated":{"line":1,"column":705}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":137,"column":0},"generated":{"line":1,"column":711}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":139,"column":0},"generated":{"line":1,"column":719}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":139,"column":0},"generated":{"line":1,"column":724}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":139,"column":0},"generated":{"line":1,"column":737}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":155,"column":0},"generated":{"line":1,"column":761}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":155,"column":0},"generated":{"line":1,"column":778}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":155,"column":0},"generated":{"line":1,"column":787}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":155,"column":0},"generated":{"line":1,"column":789}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":159,"column":0},"generated":{"line":1,"column":792}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":157,"column":0},"generated":{"line":1,"column":799}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":157,"column":0},"generated":{"line":1,"column":801}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":157,"column":0},"generated":{"line":1,"column":818}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":157,"column":0},"generated":{"line":1,"column":820}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":157,"column":0},"generated":{"line":1,"column":822}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":157,"column":0},"generated":{"line":1,"column":827}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":159,"column":0},"generated":{"line":1,"column":834}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":177,"column":0},"generated":{"line":1,"column":840}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":177,"column":0},"generated":{"line":1,"column":861}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":177,"column":0},"generated":{"line":1,"column":870}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":177,"column":0},"generated":{"line":1,"column":872}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":177,"column":0},"generated":{"line":1,"column":874}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":177,"column":0},"generated":{"line":1,"column":876}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":181,"column":0},"generated":{"line":1,"column":879}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":179,"column":0},"generated":{"line":1,"column":886}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":179,"column":0},"generated":{"line":1,"column":888}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":179,"column":0},"generated":{"line":1,"column":909}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":179,"column":0},"generated":{"line":1,"column":911}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":179,"column":0},"generated":{"line":1,"column":913}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":179,"column":0},"generated":{"line":1,"column":915}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":179,"column":0},"generated":{"line":1,"column":917}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":179,"column":0},"generated":{"line":1,"column":922}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":181,"column":0},"generated":{"line":1,"column":929}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":204,"column":0},"generated":{"line":1,"column":935}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":204,"column":0},"generated":{"line":1,"column":951}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":204,"column":0},"generated":{"line":1,"column":960}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":204,"column":0},"generated":{"line":1,"column":962}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":204,"column":0},"generated":{"line":1,"column":964}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":204,"column":0},"generated":{"line":1,"column":966}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":204,"column":0},"generated":{"line":1,"column":968}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":206,"column":0},"generated":{"line":1,"column":971}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":206,"column":0},"generated":{"line":1,"column":978}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":206,"column":0},"generated":{"line":1,"column":980}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":206,"column":0},"generated":{"line":1,"column":996}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":206,"column":0},"generated":{"line":1,"column":998}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":206,"column":0},"generated":{"line":1,"column":1000}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":206,"column":0},"generated":{"line":1,"column":1002}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":206,"column":0},"generated":{"line":1,"column":1004}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":206,"column":0},"generated":{"line":1,"column":1006}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":206,"column":0},"generated":{"line":1,"column":1011}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":220,"column":0},"generated":{"line":1,"column":1019}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":220,"column":0},"generated":{"line":1,"column":1024}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":220,"column":0},"generated":{"line":1,"column":1033}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":222,"column":0},"generated":{"line":1,"column":1036}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":222,"column":0},"generated":{"line":1,"column":1043}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":222,"column":0},"generated":{"line":1,"column":1045}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":222,"column":0},"generated":{"line":1,"column":1055}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":222,"column":0},"generated":{"line":1,"column":1060}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":222,"column":0},"generated":{"line":1,"column":1066}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":222,"column":0},"generated":{"line":1,"column":1068}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":222,"column":0},"generated":{"line":1,"column":1073}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":243,"column":0},"generated":{"line":1,"column":1087}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":243,"column":0},"generated":{"line":1,"column":1092}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":243,"column":0},"generated":{"line":1,"column":1101}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":243,"column":0},"generated":{"line":1,"column":1103}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":243,"column":0},"generated":{"line":1,"column":1105}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":243,"column":0},"generated":{"line":1,"column":1107}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":243,"column":0},"generated":{"line":1,"column":1109}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":243,"column":0},"generated":{"line":1,"column":1111}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":243,"column":0},"generated":{"line":1,"column":1113}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":247,"column":0},"generated":{"line":1,"column":1116}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":245,"column":0},"generated":{"line":1,"column":1123}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":245,"column":0},"generated":{"line":1,"column":1125}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":245,"column":0},"generated":{"line":1,"column":1130}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":245,"column":0},"generated":{"line":1,"column":1132}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":245,"column":0},"generated":{"line":1,"column":1134}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":245,"column":0},"generated":{"line":1,"column":1136}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":245,"column":0},"generated":{"line":1,"column":1138}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":245,"column":0},"generated":{"line":1,"column":1140}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":245,"column":0},"generated":{"line":1,"column":1142}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":245,"column":0},"generated":{"line":1,"column":1144}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":245,"column":0},"generated":{"line":1,"column":1149}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":247,"column":0},"generated":{"line":1,"column":1156}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":256,"column":0},"generated":{"line":1,"column":1162}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":256,"column":0},"generated":{"line":1,"column":1170}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":259,"column":0},"generated":{"line":1,"column":1181}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":259,"column":0},"generated":{"line":1,"column":1186}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":259,"column":0},"generated":{"line":1,"column":1192}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":259,"column":0},"generated":{"line":1,"column":1207}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":261,"column":0},"generated":{"line":1,"column":1214}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":261,"column":0},"generated":{"line":1,"column":1219}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":261,"column":0},"generated":{"line":1,"column":1225}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":261,"column":0},"generated":{"line":1,"column":1243}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":264,"column":0},"generated":{"line":1,"column":1246}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":264,"column":0},"generated":{"line":1,"column":1251}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":264,"column":0},"generated":{"line":1,"column":1264}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":265,"column":0},"generated":{"line":1,"column":1266}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":265,"column":0},"generated":{"line":1,"column":1271}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":265,"column":0},"generated":{"line":1,"column":1282}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":266,"column":0},"generated":{"line":1,"column":1284}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":266,"column":0},"generated":{"line":1,"column":1289}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":266,"column":0},"generated":{"line":1,"column":1302}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":267,"column":0},"generated":{"line":1,"column":1304}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":267,"column":0},"generated":{"line":1,"column":1309}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":267,"column":0},"generated":{"line":1,"column":1321}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":267,"column":0},"generated":{"line":1,"column":1328}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":269,"column":0},"generated":{"line":1,"column":1330}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":269,"column":0},"generated":{"line":1,"column":1332}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":269,"column":0},"generated":{"line":1,"column":1342}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":269,"column":0},"generated":{"line":1,"column":1350}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":269,"column":0},"generated":{"line":1,"column":1355}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":289,"column":0},"generated":{"line":1,"column":1362}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":289,"column":0},"generated":{"line":1,"column":1367}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":289,"column":0},"generated":{"line":1,"column":1376}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":289,"column":0},"generated":{"line":1,"column":1378}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":289,"column":0},"generated":{"line":1,"column":1380}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":289,"column":0},"generated":{"line":1,"column":1382}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":289,"column":0},"generated":{"line":1,"column":1384}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":289,"column":0},"generated":{"line":1,"column":1386}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":293,"column":0},"generated":{"line":1,"column":1389}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":291,"column":0},"generated":{"line":1,"column":1396}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":291,"column":0},"generated":{"line":1,"column":1398}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":291,"column":0},"generated":{"line":1,"column":1403}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":291,"column":0},"generated":{"line":1,"column":1405}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":291,"column":0},"generated":{"line":1,"column":1407}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":291,"column":0},"generated":{"line":1,"column":1409}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":291,"column":0},"generated":{"line":1,"column":1411}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":291,"column":0},"generated":{"line":1,"column":1413}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":291,"column":0},"generated":{"line":1,"column":1415}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":291,"column":0},"generated":{"line":1,"column":1420}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":293,"column":0},"generated":{"line":1,"column":1427}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":322,"column":0},"generated":{"line":1,"column":1433}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":322,"column":0},"generated":{"line":1,"column":1445}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":322,"column":0},"generated":{"line":1,"column":1454}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":322,"column":0},"generated":{"line":1,"column":1456}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":322,"column":0},"generated":{"line":1,"column":1458}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":322,"column":0},"generated":{"line":1,"column":1460}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":322,"column":0},"generated":{"line":1,"column":1462}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":322,"column":0},"generated":{"line":1,"column":1464}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":322,"column":0},"generated":{"line":1,"column":1466}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":324,"column":0},"generated":{"line":1,"column":1469}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":324,"column":0},"generated":{"line":1,"column":1476}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":324,"column":0},"generated":{"line":1,"column":1478}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":324,"column":0},"generated":{"line":1,"column":1490}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":324,"column":0},"generated":{"line":1,"column":1492}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":324,"column":0},"generated":{"line":1,"column":1494}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":324,"column":0},"generated":{"line":1,"column":1496}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":324,"column":0},"generated":{"line":1,"column":1498}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":324,"column":0},"generated":{"line":1,"column":1500}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":324,"column":0},"generated":{"line":1,"column":1502}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":324,"column":0},"generated":{"line":1,"column":1504}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":324,"column":0},"generated":{"line":1,"column":1509}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":344,"column":0},"generated":{"line":1,"column":1517}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":344,"column":0},"generated":{"line":1,"column":1529}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":344,"column":0},"generated":{"line":1,"column":1538}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":344,"column":0},"generated":{"line":1,"column":1540}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":344,"column":0},"generated":{"line":1,"column":1542}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":346,"column":0},"generated":{"line":1,"column":1545}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":346,"column":0},"generated":{"line":1,"column":1552}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":346,"column":0},"generated":{"line":1,"column":1554}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":346,"column":0},"generated":{"line":1,"column":1566}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":346,"column":0},"generated":{"line":1,"column":1568}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":346,"column":0},"generated":{"line":1,"column":1570}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":346,"column":0},"generated":{"line":1,"column":1572}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":346,"column":0},"generated":{"line":1,"column":1577}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":374,"column":0},"generated":{"line":1,"column":1585}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":374,"column":0},"generated":{"line":1,"column":1594}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":374,"column":0},"generated":{"line":1,"column":1603}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":374,"column":0},"generated":{"line":1,"column":1605}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":374,"column":0},"generated":{"line":1,"column":1607}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":374,"column":0},"generated":{"line":1,"column":1609}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":374,"column":0},"generated":{"line":1,"column":1611}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":374,"column":0},"generated":{"line":1,"column":1613}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":374,"column":0},"generated":{"line":1,"column":1615}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":376,"column":0},"generated":{"line":1,"column":1618}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":376,"column":0},"generated":{"line":1,"column":1625}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":376,"column":0},"generated":{"line":1,"column":1627}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":376,"column":0},"generated":{"line":1,"column":1636}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":376,"column":0},"generated":{"line":1,"column":1638}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":376,"column":0},"generated":{"line":1,"column":1640}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":376,"column":0},"generated":{"line":1,"column":1642}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":376,"column":0},"generated":{"line":1,"column":1644}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":376,"column":0},"generated":{"line":1,"column":1646}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":376,"column":0},"generated":{"line":1,"column":1648}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":376,"column":0},"generated":{"line":1,"column":1650}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":376,"column":0},"generated":{"line":1,"column":1655}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":403,"column":0},"generated":{"line":1,"column":1663}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":403,"column":0},"generated":{"line":1,"column":1675}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":403,"column":0},"generated":{"line":1,"column":1684}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":403,"column":0},"generated":{"line":1,"column":1686}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":403,"column":0},"generated":{"line":1,"column":1688}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":403,"column":0},"generated":{"line":1,"column":1690}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":403,"column":0},"generated":{"line":1,"column":1692}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":403,"column":0},"generated":{"line":1,"column":1694}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":403,"column":0},"generated":{"line":1,"column":1696}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":407,"column":0},"generated":{"line":1,"column":1699}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":405,"column":0},"generated":{"line":1,"column":1706}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":405,"column":0},"generated":{"line":1,"column":1708}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":405,"column":0},"generated":{"line":1,"column":1720}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":405,"column":0},"generated":{"line":1,"column":1722}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":405,"column":0},"generated":{"line":1,"column":1724}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":405,"column":0},"generated":{"line":1,"column":1726}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":405,"column":0},"generated":{"line":1,"column":1728}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":405,"column":0},"generated":{"line":1,"column":1730}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":405,"column":0},"generated":{"line":1,"column":1732}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":405,"column":0},"generated":{"line":1,"column":1734}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":405,"column":0},"generated":{"line":1,"column":1739}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":407,"column":0},"generated":{"line":1,"column":1746}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":423,"column":0},"generated":{"line":1,"column":1752}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":423,"column":0},"generated":{"line":1,"column":1762}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":423,"column":0},"generated":{"line":1,"column":1771}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":423,"column":0},"generated":{"line":1,"column":1773}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":423,"column":0},"generated":{"line":1,"column":1775}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":425,"column":0},"generated":{"line":1,"column":1778}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":425,"column":0},"generated":{"line":1,"column":1785}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":425,"column":0},"generated":{"line":1,"column":1787}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":425,"column":0},"generated":{"line":1,"column":1797}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":425,"column":0},"generated":{"line":1,"column":1799}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":425,"column":0},"generated":{"line":1,"column":1801}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":425,"column":0},"generated":{"line":1,"column":1803}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":425,"column":0},"generated":{"line":1,"column":1808}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":443,"column":0},"generated":{"line":1,"column":1816}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":443,"column":0},"generated":{"line":1,"column":1833}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":443,"column":0},"generated":{"line":1,"column":1842}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":443,"column":0},"generated":{"line":1,"column":1844}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":443,"column":0},"generated":{"line":1,"column":1846}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":443,"column":0},"generated":{"line":1,"column":1848}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":445,"column":0},"generated":{"line":1,"column":1851}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":445,"column":0},"generated":{"line":1,"column":1858}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":445,"column":0},"generated":{"line":1,"column":1860}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":445,"column":0},"generated":{"line":1,"column":1877}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":445,"column":0},"generated":{"line":1,"column":1879}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":445,"column":0},"generated":{"line":1,"column":1881}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":445,"column":0},"generated":{"line":1,"column":1883}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":445,"column":0},"generated":{"line":1,"column":1885}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":445,"column":0},"generated":{"line":1,"column":1890}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":468,"column":0},"generated":{"line":1,"column":1898}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":468,"column":0},"generated":{"line":1,"column":1913}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":468,"column":0},"generated":{"line":1,"column":1922}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":468,"column":0},"generated":{"line":1,"column":1924}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":468,"column":0},"generated":{"line":1,"column":1926}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":468,"column":0},"generated":{"line":1,"column":1928}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":468,"column":0},"generated":{"line":1,"column":1930}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":470,"column":0},"generated":{"line":1,"column":1933}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":470,"column":0},"generated":{"line":1,"column":1940}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":470,"column":0},"generated":{"line":1,"column":1942}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":470,"column":0},"generated":{"line":1,"column":1957}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":470,"column":0},"generated":{"line":1,"column":1959}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":470,"column":0},"generated":{"line":1,"column":1961}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":470,"column":0},"generated":{"line":1,"column":1963}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":470,"column":0},"generated":{"line":1,"column":1965}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":470,"column":0},"generated":{"line":1,"column":1967}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":470,"column":0},"generated":{"line":1,"column":1972}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":492,"column":0},"generated":{"line":1,"column":1980}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":492,"column":0},"generated":{"line":1,"column":2000}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":492,"column":0},"generated":{"line":1,"column":2009}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":492,"column":0},"generated":{"line":1,"column":2011}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":492,"column":0},"generated":{"line":1,"column":2013}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":494,"column":0},"generated":{"line":1,"column":2016}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":494,"column":0},"generated":{"line":1,"column":2023}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":494,"column":0},"generated":{"line":1,"column":2025}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":494,"column":0},"generated":{"line":1,"column":2045}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":494,"column":0},"generated":{"line":1,"column":2047}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":494,"column":0},"generated":{"line":1,"column":2049}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":494,"column":0},"generated":{"line":1,"column":2051}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":494,"column":0},"generated":{"line":1,"column":2056}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":518,"column":0},"generated":{"line":1,"column":2064}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":518,"column":0},"generated":{"line":1,"column":2086}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":518,"column":0},"generated":{"line":1,"column":2095}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":518,"column":0},"generated":{"line":1,"column":2097}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":518,"column":0},"generated":{"line":1,"column":2099}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":518,"column":0},"generated":{"line":1,"column":2101}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":518,"column":0},"generated":{"line":1,"column":2103}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":518,"column":0},"generated":{"line":1,"column":2105}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":520,"column":0},"generated":{"line":1,"column":2108}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":520,"column":0},"generated":{"line":1,"column":2115}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":520,"column":0},"generated":{"line":1,"column":2117}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":520,"column":0},"generated":{"line":1,"column":2139}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":520,"column":0},"generated":{"line":1,"column":2141}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":520,"column":0},"generated":{"line":1,"column":2143}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":520,"column":0},"generated":{"line":1,"column":2145}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":520,"column":0},"generated":{"line":1,"column":2147}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":520,"column":0},"generated":{"line":1,"column":2149}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":520,"column":0},"generated":{"line":1,"column":2151}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":520,"column":0},"generated":{"line":1,"column":2156}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":535,"column":0},"generated":{"line":1,"column":2164}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":535,"column":0},"generated":{"line":1,"column":2174}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":535,"column":0},"generated":{"line":1,"column":2183}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":535,"column":0},"generated":{"line":1,"column":2185}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":537,"column":0},"generated":{"line":1,"column":2188}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":537,"column":0},"generated":{"line":1,"column":2195}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":537,"column":0},"generated":{"line":1,"column":2197}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":537,"column":0},"generated":{"line":1,"column":2207}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":537,"column":0},"generated":{"line":1,"column":2209}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":537,"column":0},"generated":{"line":1,"column":2211}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":537,"column":0},"generated":{"line":1,"column":2216}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":553,"column":0},"generated":{"line":1,"column":2224}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":553,"column":0},"generated":{"line":1,"column":2241}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":553,"column":0},"generated":{"line":1,"column":2250}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":553,"column":0},"generated":{"line":1,"column":2252}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":553,"column":0},"generated":{"line":1,"column":2254}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":555,"column":0},"generated":{"line":1,"column":2257}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":555,"column":0},"generated":{"line":1,"column":2264}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":555,"column":0},"generated":{"line":1,"column":2266}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":555,"column":0},"generated":{"line":1,"column":2283}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":555,"column":0},"generated":{"line":1,"column":2285}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":555,"column":0},"generated":{"line":1,"column":2287}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":555,"column":0},"generated":{"line":1,"column":2289}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":555,"column":0},"generated":{"line":1,"column":2294}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":574,"column":0},"generated":{"line":1,"column":2302}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":574,"column":0},"generated":{"line":1,"column":2312}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":574,"column":0},"generated":{"line":1,"column":2321}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":574,"column":0},"generated":{"line":1,"column":2323}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":574,"column":0},"generated":{"line":1,"column":2325}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":574,"column":0},"generated":{"line":1,"column":2327}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":576,"column":0},"generated":{"line":1,"column":2330}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":576,"column":0},"generated":{"line":1,"column":2337}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":576,"column":0},"generated":{"line":1,"column":2339}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":576,"column":0},"generated":{"line":1,"column":2349}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":576,"column":0},"generated":{"line":1,"column":2351}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":576,"column":0},"generated":{"line":1,"column":2353}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":576,"column":0},"generated":{"line":1,"column":2355}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":576,"column":0},"generated":{"line":1,"column":2357}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":576,"column":0},"generated":{"line":1,"column":2362}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":596,"column":0},"generated":{"line":1,"column":2370}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":596,"column":0},"generated":{"line":1,"column":2387}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":596,"column":0},"generated":{"line":1,"column":2396}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":596,"column":0},"generated":{"line":1,"column":2398}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":596,"column":0},"generated":{"line":1,"column":2400}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":596,"column":0},"generated":{"line":1,"column":2402}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":596,"column":0},"generated":{"line":1,"column":2404}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":598,"column":0},"generated":{"line":1,"column":2407}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":598,"column":0},"generated":{"line":1,"column":2414}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":598,"column":0},"generated":{"line":1,"column":2416}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":598,"column":0},"generated":{"line":1,"column":2433}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":598,"column":0},"generated":{"line":1,"column":2435}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":598,"column":0},"generated":{"line":1,"column":2437}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":598,"column":0},"generated":{"line":1,"column":2439}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":598,"column":0},"generated":{"line":1,"column":2441}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":598,"column":0},"generated":{"line":1,"column":2443}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":598,"column":0},"generated":{"line":1,"column":2448}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":619,"column":0},"generated":{"line":1,"column":2456}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":619,"column":0},"generated":{"line":1,"column":2467}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":619,"column":0},"generated":{"line":1,"column":2476}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":619,"column":0},"generated":{"line":1,"column":2478}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":619,"column":0},"generated":{"line":1,"column":2480}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":619,"column":0},"generated":{"line":1,"column":2482}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":623,"column":0},"generated":{"line":1,"column":2485}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":621,"column":0},"generated":{"line":1,"column":2492}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":621,"column":0},"generated":{"line":1,"column":2494}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":621,"column":0},"generated":{"line":1,"column":2505}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":621,"column":0},"generated":{"line":1,"column":2507}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":621,"column":0},"generated":{"line":1,"column":2509}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":621,"column":0},"generated":{"line":1,"column":2511}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":621,"column":0},"generated":{"line":1,"column":2513}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":621,"column":0},"generated":{"line":1,"column":2518}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":623,"column":0},"generated":{"line":1,"column":2525}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":644,"column":0},"generated":{"line":1,"column":2531}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":644,"column":0},"generated":{"line":1,"column":2541}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":644,"column":0},"generated":{"line":1,"column":2550}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":644,"column":0},"generated":{"line":1,"column":2552}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":644,"column":0},"generated":{"line":1,"column":2554}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":644,"column":0},"generated":{"line":1,"column":2556}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":644,"column":0},"generated":{"line":1,"column":2558}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":648,"column":0},"generated":{"line":1,"column":2561}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":646,"column":0},"generated":{"line":1,"column":2568}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":646,"column":0},"generated":{"line":1,"column":2570}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":646,"column":0},"generated":{"line":1,"column":2580}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":646,"column":0},"generated":{"line":1,"column":2582}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":646,"column":0},"generated":{"line":1,"column":2584}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":646,"column":0},"generated":{"line":1,"column":2586}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":646,"column":0},"generated":{"line":1,"column":2588}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":646,"column":0},"generated":{"line":1,"column":2590}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":646,"column":0},"generated":{"line":1,"column":2595}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":648,"column":0},"generated":{"line":1,"column":2602}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":667,"column":0},"generated":{"line":1,"column":2608}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":667,"column":0},"generated":{"line":1,"column":2621}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":667,"column":0},"generated":{"line":1,"column":2630}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":667,"column":0},"generated":{"line":1,"column":2632}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":667,"column":0},"generated":{"line":1,"column":2634}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":667,"column":0},"generated":{"line":1,"column":2636}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":669,"column":0},"generated":{"line":1,"column":2639}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":669,"column":0},"generated":{"line":1,"column":2646}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":669,"column":0},"generated":{"line":1,"column":2648}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":669,"column":0},"generated":{"line":1,"column":2661}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":669,"column":0},"generated":{"line":1,"column":2663}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":669,"column":0},"generated":{"line":1,"column":2665}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":669,"column":0},"generated":{"line":1,"column":2667}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":669,"column":0},"generated":{"line":1,"column":2669}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":669,"column":0},"generated":{"line":1,"column":2674}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":689,"column":0},"generated":{"line":1,"column":2682}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":689,"column":0},"generated":{"line":1,"column":2702}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":689,"column":0},"generated":{"line":1,"column":2711}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":689,"column":0},"generated":{"line":1,"column":2713}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":689,"column":0},"generated":{"line":1,"column":2715}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":689,"column":0},"generated":{"line":1,"column":2717}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":689,"column":0},"generated":{"line":1,"column":2719}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":691,"column":0},"generated":{"line":1,"column":2722}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":691,"column":0},"generated":{"line":1,"column":2729}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":691,"column":0},"generated":{"line":1,"column":2731}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":691,"column":0},"generated":{"line":1,"column":2751}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":691,"column":0},"generated":{"line":1,"column":2753}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":691,"column":0},"generated":{"line":1,"column":2755}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":691,"column":0},"generated":{"line":1,"column":2757}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":691,"column":0},"generated":{"line":1,"column":2759}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":691,"column":0},"generated":{"line":1,"column":2761}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":691,"column":0},"generated":{"line":1,"column":2766}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":714,"column":0},"generated":{"line":1,"column":2774}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":714,"column":0},"generated":{"line":1,"column":2786}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":714,"column":0},"generated":{"line":1,"column":2795}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":714,"column":0},"generated":{"line":1,"column":2797}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":718,"column":0},"generated":{"line":1,"column":2800}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":716,"column":0},"generated":{"line":1,"column":2807}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":716,"column":0},"generated":{"line":1,"column":2809}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":716,"column":0},"generated":{"line":1,"column":2821}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":716,"column":0},"generated":{"line":1,"column":2823}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":716,"column":0},"generated":{"line":1,"column":2825}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":716,"column":0},"generated":{"line":1,"column":2830}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":718,"column":0},"generated":{"line":1,"column":2837}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":738,"column":0},"generated":{"line":1,"column":2843}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":738,"column":0},"generated":{"line":1,"column":2858}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":738,"column":0},"generated":{"line":1,"column":2867}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":738,"column":0},"generated":{"line":1,"column":2869}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":738,"column":0},"generated":{"line":1,"column":2871}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":738,"column":0},"generated":{"line":1,"column":2873}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":738,"column":0},"generated":{"line":1,"column":2875}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":738,"column":0},"generated":{"line":1,"column":2877}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":742,"column":0},"generated":{"line":1,"column":2880}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":740,"column":0},"generated":{"line":1,"column":2887}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":740,"column":0},"generated":{"line":1,"column":2889}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":740,"column":0},"generated":{"line":1,"column":2904}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":740,"column":0},"generated":{"line":1,"column":2906}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":740,"column":0},"generated":{"line":1,"column":2908}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":740,"column":0},"generated":{"line":1,"column":2910}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":740,"column":0},"generated":{"line":1,"column":2912}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":740,"column":0},"generated":{"line":1,"column":2914}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":740,"column":0},"generated":{"line":1,"column":2916}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":740,"column":0},"generated":{"line":1,"column":2921}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":742,"column":0},"generated":{"line":1,"column":2928}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":761,"column":0},"generated":{"line":1,"column":2934}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":761,"column":0},"generated":{"line":1,"column":2947}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":761,"column":0},"generated":{"line":1,"column":2956}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":761,"column":0},"generated":{"line":1,"column":2958}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":761,"column":0},"generated":{"line":1,"column":2960}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":765,"column":0},"generated":{"line":1,"column":2963}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":763,"column":0},"generated":{"line":1,"column":2970}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":763,"column":0},"generated":{"line":1,"column":2972}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":763,"column":0},"generated":{"line":1,"column":2985}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":763,"column":0},"generated":{"line":1,"column":2987}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":763,"column":0},"generated":{"line":1,"column":2989}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":763,"column":0},"generated":{"line":1,"column":2991}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":763,"column":0},"generated":{"line":1,"column":2996}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":765,"column":0},"generated":{"line":1,"column":3003}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":786,"column":0},"generated":{"line":1,"column":3009}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":786,"column":0},"generated":{"line":1,"column":3029}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":786,"column":0},"generated":{"line":1,"column":3038}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":786,"column":0},"generated":{"line":1,"column":3040}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":786,"column":0},"generated":{"line":1,"column":3042}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":786,"column":0},"generated":{"line":1,"column":3044}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":790,"column":0},"generated":{"line":1,"column":3047}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":788,"column":0},"generated":{"line":1,"column":3054}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":788,"column":0},"generated":{"line":1,"column":3056}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":788,"column":0},"generated":{"line":1,"column":3076}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":788,"column":0},"generated":{"line":1,"column":3078}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":788,"column":0},"generated":{"line":1,"column":3080}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":788,"column":0},"generated":{"line":1,"column":3082}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":788,"column":0},"generated":{"line":1,"column":3084}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":788,"column":0},"generated":{"line":1,"column":3089}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":790,"column":0},"generated":{"line":1,"column":3096}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":814,"column":0},"generated":{"line":1,"column":3102}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":814,"column":0},"generated":{"line":1,"column":3125}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":814,"column":0},"generated":{"line":1,"column":3134}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":814,"column":0},"generated":{"line":1,"column":3136}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":814,"column":0},"generated":{"line":1,"column":3138}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":818,"column":0},"generated":{"line":1,"column":3141}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":816,"column":0},"generated":{"line":1,"column":3148}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":816,"column":0},"generated":{"line":1,"column":3150}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":816,"column":0},"generated":{"line":1,"column":3173}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":816,"column":0},"generated":{"line":1,"column":3175}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":816,"column":0},"generated":{"line":1,"column":3177}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":816,"column":0},"generated":{"line":1,"column":3179}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":816,"column":0},"generated":{"line":1,"column":3184}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":818,"column":0},"generated":{"line":1,"column":3191}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":837,"column":0},"generated":{"line":1,"column":3197}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":837,"column":0},"generated":{"line":1,"column":3221}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":837,"column":0},"generated":{"line":1,"column":3230}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":837,"column":0},"generated":{"line":1,"column":3232}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":837,"column":0},"generated":{"line":1,"column":3234}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":841,"column":0},"generated":{"line":1,"column":3237}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":839,"column":0},"generated":{"line":1,"column":3244}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":839,"column":0},"generated":{"line":1,"column":3246}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":839,"column":0},"generated":{"line":1,"column":3270}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":839,"column":0},"generated":{"line":1,"column":3272}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":839,"column":0},"generated":{"line":1,"column":3274}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":839,"column":0},"generated":{"line":1,"column":3276}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":839,"column":0},"generated":{"line":1,"column":3281}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":841,"column":0},"generated":{"line":1,"column":3288}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":860,"column":0},"generated":{"line":1,"column":3294}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":860,"column":0},"generated":{"line":1,"column":3325}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":860,"column":0},"generated":{"line":1,"column":3334}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":860,"column":0},"generated":{"line":1,"column":3336}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":864,"column":0},"generated":{"line":1,"column":3339}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":862,"column":0},"generated":{"line":1,"column":3346}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":862,"column":0},"generated":{"line":1,"column":3348}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":862,"column":0},"generated":{"line":1,"column":3379}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":862,"column":0},"generated":{"line":1,"column":3381}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":862,"column":0},"generated":{"line":1,"column":3383}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":862,"column":0},"generated":{"line":1,"column":3388}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":864,"column":0},"generated":{"line":1,"column":3395}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":883,"column":0},"generated":{"line":1,"column":3401}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":883,"column":0},"generated":{"line":1,"column":3422}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":883,"column":0},"generated":{"line":1,"column":3431}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":883,"column":0},"generated":{"line":1,"column":3433}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":883,"column":0},"generated":{"line":1,"column":3435}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":887,"column":0},"generated":{"line":1,"column":3438}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":885,"column":0},"generated":{"line":1,"column":3445}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":885,"column":0},"generated":{"line":1,"column":3447}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":885,"column":0},"generated":{"line":1,"column":3468}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":885,"column":0},"generated":{"line":1,"column":3470}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":885,"column":0},"generated":{"line":1,"column":3472}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":885,"column":0},"generated":{"line":1,"column":3474}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":885,"column":0},"generated":{"line":1,"column":3479}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":887,"column":0},"generated":{"line":1,"column":3486}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":907,"column":0},"generated":{"line":1,"column":3492}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":907,"column":0},"generated":{"line":1,"column":3516}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":907,"column":0},"generated":{"line":1,"column":3525}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":907,"column":0},"generated":{"line":1,"column":3527}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":907,"column":0},"generated":{"line":1,"column":3529}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":907,"column":0},"generated":{"line":1,"column":3531}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":907,"column":0},"generated":{"line":1,"column":3533}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":907,"column":0},"generated":{"line":1,"column":3535}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":911,"column":0},"generated":{"line":1,"column":3538}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":909,"column":0},"generated":{"line":1,"column":3545}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":909,"column":0},"generated":{"line":1,"column":3547}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":909,"column":0},"generated":{"line":1,"column":3571}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":909,"column":0},"generated":{"line":1,"column":3573}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":909,"column":0},"generated":{"line":1,"column":3575}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":909,"column":0},"generated":{"line":1,"column":3577}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":909,"column":0},"generated":{"line":1,"column":3579}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":909,"column":0},"generated":{"line":1,"column":3581}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":909,"column":0},"generated":{"line":1,"column":3583}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":909,"column":0},"generated":{"line":1,"column":3588}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":911,"column":0},"generated":{"line":1,"column":3595}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":930,"column":0},"generated":{"line":1,"column":3601}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":930,"column":0},"generated":{"line":1,"column":3609}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":930,"column":0},"generated":{"line":1,"column":3618}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":930,"column":0},"generated":{"line":1,"column":3620}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":930,"column":0},"generated":{"line":1,"column":3622}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":930,"column":0},"generated":{"line":1,"column":3624}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":934,"column":0},"generated":{"line":1,"column":3627}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":932,"column":0},"generated":{"line":1,"column":3634}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":932,"column":0},"generated":{"line":1,"column":3636}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":932,"column":0},"generated":{"line":1,"column":3644}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":932,"column":0},"generated":{"line":1,"column":3646}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":932,"column":0},"generated":{"line":1,"column":3648}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":932,"column":0},"generated":{"line":1,"column":3650}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":932,"column":0},"generated":{"line":1,"column":3652}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":932,"column":0},"generated":{"line":1,"column":3657}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":934,"column":0},"generated":{"line":1,"column":3664}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":954,"column":0},"generated":{"line":1,"column":3670}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":954,"column":0},"generated":{"line":1,"column":3682}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":954,"column":0},"generated":{"line":1,"column":3691}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":954,"column":0},"generated":{"line":1,"column":3693}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":954,"column":0},"generated":{"line":1,"column":3695}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":954,"column":0},"generated":{"line":1,"column":3697}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":954,"column":0},"generated":{"line":1,"column":3699}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":954,"column":0},"generated":{"line":1,"column":3701}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":958,"column":0},"generated":{"line":1,"column":3704}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":956,"column":0},"generated":{"line":1,"column":3711}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":956,"column":0},"generated":{"line":1,"column":3713}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":956,"column":0},"generated":{"line":1,"column":3725}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":956,"column":0},"generated":{"line":1,"column":3727}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":956,"column":0},"generated":{"line":1,"column":3729}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":956,"column":0},"generated":{"line":1,"column":3731}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":956,"column":0},"generated":{"line":1,"column":3733}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":956,"column":0},"generated":{"line":1,"column":3735}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":956,"column":0},"generated":{"line":1,"column":3737}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":956,"column":0},"generated":{"line":1,"column":3742}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":958,"column":0},"generated":{"line":1,"column":3749}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":973,"column":0},"generated":{"line":1,"column":3755}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":973,"column":0},"generated":{"line":1,"column":3768}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":973,"column":0},"generated":{"line":1,"column":3777}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":973,"column":0},"generated":{"line":1,"column":3779}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":975,"column":0},"generated":{"line":1,"column":3782}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":975,"column":0},"generated":{"line":1,"column":3789}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":975,"column":0},"generated":{"line":1,"column":3791}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":975,"column":0},"generated":{"line":1,"column":3804}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":975,"column":0},"generated":{"line":1,"column":3806}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":975,"column":0},"generated":{"line":1,"column":3808}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":975,"column":0},"generated":{"line":1,"column":3813}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":990,"column":0},"generated":{"line":1,"column":3821}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":990,"column":0},"generated":{"line":1,"column":3834}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":990,"column":0},"generated":{"line":1,"column":3843}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":990,"column":0},"generated":{"line":1,"column":3845}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":992,"column":0},"generated":{"line":1,"column":3848}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":992,"column":0},"generated":{"line":1,"column":3855}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":992,"column":0},"generated":{"line":1,"column":3857}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":992,"column":0},"generated":{"line":1,"column":3870}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":992,"column":0},"generated":{"line":1,"column":3872}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":992,"column":0},"generated":{"line":1,"column":3874}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":992,"column":0},"generated":{"line":1,"column":3879}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":1010,"column":0},"generated":{"line":1,"column":3887}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":1010,"column":0},"generated":{"line":1,"column":3901}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":1010,"column":0},"generated":{"line":1,"column":3910}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":1010,"column":0},"generated":{"line":1,"column":3912}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":1010,"column":0},"generated":{"line":1,"column":3914}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":1010,"column":0},"generated":{"line":1,"column":3916}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":1012,"column":0},"generated":{"line":1,"column":3919}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":1012,"column":0},"generated":{"line":1,"column":3926}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":1012,"column":0},"generated":{"line":1,"column":3928}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":1012,"column":0},"generated":{"line":1,"column":3942}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":1012,"column":0},"generated":{"line":1,"column":3944}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":1012,"column":0},"generated":{"line":1,"column":3946}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":1012,"column":0},"generated":{"line":1,"column":3948}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":1012,"column":0},"generated":{"line":1,"column":3950}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":1012,"column":0},"generated":{"line":1,"column":3955}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":1043,"column":0},"generated":{"line":1,"column":3963}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":1043,"column":0},"generated":{"line":1,"column":3981}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":1043,"column":0},"generated":{"line":1,"column":3990}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":1043,"column":0},"generated":{"line":1,"column":3992}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":1043,"column":0},"generated":{"line":1,"column":3994}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":1043,"column":0},"generated":{"line":1,"column":3996}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":1043,"column":0},"generated":{"line":1,"column":3998}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":1047,"column":0},"generated":{"line":1,"column":4001}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":1045,"column":0},"generated":{"line":1,"column":4008}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":1045,"column":0},"generated":{"line":1,"column":4010}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":1045,"column":0},"generated":{"line":1,"column":4028}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":1045,"column":0},"generated":{"line":1,"column":4030}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":1045,"column":0},"generated":{"line":1,"column":4032}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":1045,"column":0},"generated":{"line":1,"column":4034}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":1045,"column":0},"generated":{"line":1,"column":4036}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":1045,"column":0},"generated":{"line":1,"column":4038}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":1045,"column":0},"generated":{"line":1,"column":4043}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":1047,"column":0},"generated":{"line":1,"column":4050}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":1064,"column":0},"generated":{"line":1,"column":4056}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":1064,"column":0},"generated":{"line":1,"column":4069}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":1064,"column":0},"generated":{"line":1,"column":4078}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":1064,"column":0},"generated":{"line":1,"column":4080}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":1064,"column":0},"generated":{"line":1,"column":4082}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":1066,"column":0},"generated":{"line":1,"column":4085}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":1066,"column":0},"generated":{"line":1,"column":4092}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":1066,"column":0},"generated":{"line":1,"column":4094}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":1066,"column":0},"generated":{"line":1,"column":4107}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":1066,"column":0},"generated":{"line":1,"column":4109}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":1066,"column":0},"generated":{"line":1,"column":4111}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":1066,"column":0},"generated":{"line":1,"column":4113}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":1066,"column":0},"generated":{"line":1,"column":4118}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":1083,"column":0},"generated":{"line":1,"column":4126}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":1083,"column":0},"generated":{"line":1,"column":4139}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":1083,"column":0},"generated":{"line":1,"column":4148}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":1083,"column":0},"generated":{"line":1,"column":4150}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":1083,"column":0},"generated":{"line":1,"column":4152}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":1085,"column":0},"generated":{"line":1,"column":4155}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":1085,"column":0},"generated":{"line":1,"column":4162}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":1085,"column":0},"generated":{"line":1,"column":4164}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":1085,"column":0},"generated":{"line":1,"column":4177}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":1085,"column":0},"generated":{"line":1,"column":4179}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":1085,"column":0},"generated":{"line":1,"column":4181}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":1085,"column":0},"generated":{"line":1,"column":4183}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":1085,"column":0},"generated":{"line":1,"column":4188}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":1105,"column":0},"generated":{"line":1,"column":4196}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":1105,"column":0},"generated":{"line":1,"column":4210}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":1105,"column":0},"generated":{"line":1,"column":4219}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":1105,"column":0},"generated":{"line":1,"column":4221}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":1105,"column":0},"generated":{"line":1,"column":4223}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":1105,"column":0},"generated":{"line":1,"column":4225}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":1105,"column":0},"generated":{"line":1,"column":4227}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":1107,"column":0},"generated":{"line":1,"column":4230}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":1107,"column":0},"generated":{"line":1,"column":4237}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":1107,"column":0},"generated":{"line":1,"column":4239}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":1107,"column":0},"generated":{"line":1,"column":4253}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":1107,"column":0},"generated":{"line":1,"column":4255}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":1107,"column":0},"generated":{"line":1,"column":4257}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":1107,"column":0},"generated":{"line":1,"column":4259}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":1107,"column":0},"generated":{"line":1,"column":4261}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":1107,"column":0},"generated":{"line":1,"column":4263}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":1107,"column":0},"generated":{"line":1,"column":4268}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":1112,"column":0},"generated":{"line":1,"column":4278}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":1112,"column":0},"generated":{"line":1,"column":4285}},{"source":"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js","original":{"line":1112,"column":0},"generated":{"line":1,"column":4293}}],"sources":{"node_modules\\phaser\\src\\tilemaps\\dynamiclayer\\DynamicTilemapLayer.js":"/**\r\n * @author       Richard Davey <rich@photonstorm.com>\r\n * @copyright    2018 Photon Storm Ltd.\r\n * @license      {@link https://github.com/photonstorm/phaser/blob/master/license.txt|MIT License}\r\n */\r\n\r\nvar Class = require('../../utils/Class');\r\nvar Components = require('../../gameobjects/components');\r\nvar DynamicTilemapLayerRender = require('./DynamicTilemapLayerRender');\r\nvar GameObject = require('../../gameobjects/GameObject');\r\nvar TilemapComponents = require('../components');\r\n\r\n/**\r\n * @classdesc\r\n * A DynamicTilemapLayer is a game object that renders LayerData from a Tilemap. A\r\n * DynamicTilemapLayer can only render tiles from a single tileset.\r\n *\r\n * A DynamicTilemapLayer trades some speed for being able to apply powerful effects. Unlike a\r\n * StaticTilemapLayer, you can apply per-tile effects like tint or alpha, and you can change the\r\n * tiles in a DynamicTilemapLayer. Use this over a StaticTilemapLayer when you need those\r\n * features.\r\n *\r\n * @class DynamicTilemapLayer\r\n * @extends Phaser.GameObjects.GameObject\r\n * @memberOf Phaser.Tilemaps\r\n * @constructor\r\n * @since 3.0.0\r\n *\r\n * @extends Phaser.GameObjects.Components.Alpha\r\n * @extends Phaser.GameObjects.Components.BlendMode\r\n * @extends Phaser.GameObjects.Components.ComputedSize\r\n * @extends Phaser.GameObjects.Components.Depth\r\n * @extends Phaser.GameObjects.Components.Flip\r\n * @extends Phaser.GameObjects.Components.GetBounds\r\n * @extends Phaser.GameObjects.Components.Origin\r\n * @extends Phaser.GameObjects.Components.Pipeline\r\n * @extends Phaser.GameObjects.Components.ScaleMode\r\n * @extends Phaser.GameObjects.Components.ScrollFactor\r\n * @extends Phaser.GameObjects.Components.Transform\r\n * @extends Phaser.GameObjects.Components.Visible\r\n *\r\n * @param {Phaser.Scene} scene - [description]\r\n * @param {Phaser.Tilemaps.Tilemap} tilemap - The Tilemap this layer is a part of.\r\n * @param {integer} layerIndex - The index of the LayerData associated with this layer.\r\n * @param {Phaser.Tilemaps.Tileset} tileset - The tileset used to render the tiles in this layer.\r\n * @param {number} [x=0] - The world x position where the top left of this layer will be placed.\r\n * @param {number} [y=0] - The world y position where the top left of this layer will be placed.\r\n */\r\nvar DynamicTilemapLayer = new Class({\r\n\r\n    Extends: GameObject,\r\n\r\n    Mixins: [\r\n        Components.Alpha,\r\n        Components.BlendMode,\r\n        Components.ComputedSize,\r\n        Components.Depth,\r\n        Components.Flip,\r\n        Components.GetBounds,\r\n        Components.Origin,\r\n        Components.Pipeline,\r\n        Components.ScaleMode,\r\n        Components.Transform,\r\n        Components.Visible,\r\n        Components.ScrollFactor,\r\n        DynamicTilemapLayerRender\r\n    ],\r\n\r\n    initialize:\r\n\r\n    function DynamicTilemapLayer (scene, tilemap, layerIndex, tileset, x, y)\r\n    {\r\n        GameObject.call(this, scene, 'DynamicTilemapLayer');\r\n\r\n        /**\r\n         * Used internally by physics system to perform fast type checks.\r\n         *\r\n         * @name Phaser.Tilemaps.DynamicTilemapLayer#isTilemap\r\n         * @type {boolean}\r\n         * @readOnly\r\n         * @since 3.0.0\r\n         */\r\n        this.isTilemap = true;\r\n\r\n        /**\r\n         * The Tilemap that this layer is a part of.\r\n         *\r\n         * @name Phaser.Tilemaps.DynamicTilemapLayer#tilemap\r\n         * @type {Phaser.Tilemaps.Tilemap}\r\n         * @since 3.0.0\r\n         */\r\n        this.tilemap = tilemap;\r\n\r\n        /**\r\n         * The index of the LayerData associated with this layer.\r\n         *\r\n         * @name Phaser.Tilemaps.DynamicTilemapLayer#layerIndex\r\n         * @type {integer}\r\n         * @since 3.0.0\r\n         */\r\n        this.layerIndex = layerIndex;\r\n\r\n        /**\r\n         * The LayerData associated with this layer. LayerData can only be associated with one\r\n         * tilemap layer.\r\n         *\r\n         * @name Phaser.Tilemaps.DynamicTilemapLayer#layer\r\n         * @type {Phaser.Tilemaps.LayerData}\r\n         * @since 3.0.0\r\n         */\r\n        this.layer = tilemap.layers[layerIndex];\r\n\r\n        this.layer.tilemapLayer = this; // Link the LayerData with this static tilemap layer\r\n\r\n        /**\r\n         * The Tileset associated with this layer. A tilemap layer can only render from one Tileset.\r\n         *\r\n         * @name Phaser.Tilemaps.DynamicTilemapLayer#tileset\r\n         * @type {Phaser.Tilemaps.Tileset}\r\n         * @since 3.0.0\r\n         */\r\n        this.tileset = tileset;\r\n\r\n        /**\r\n         * Used internally with the canvas render. This holds the tiles that are visible within the\r\n         * camera.\r\n         *\r\n         * @name Phaser.Tilemaps.DynamicTilemapLayer#culledTiles\r\n         * @type {array}\r\n         * @since 3.0.0\r\n         */\r\n        this.culledTiles = [];\r\n\r\n        this.setAlpha(this.layer.alpha);\r\n        this.setPosition(x, y);\r\n        this.setOrigin();\r\n        this.setSize(this.layer.tileWidth * this.layer.width, this.layer.tileHeight * this.layer.height);\r\n\r\n        this.initPipeline('TextureTintPipeline');\r\n    },\r\n\r\n    /**\r\n     * Calculates interesting faces at the given tile coordinates of the specified layer. Interesting\r\n     * faces are used internally for optimizing collisions against tiles. This method is mostly used\r\n     * internally to optimize recalculating faces when only one tile has been changed.\r\n     *\r\n     * @method Phaser.Tilemaps.DynamicTilemapLayer#calculateFacesAt\r\n     * @since 3.0.0\r\n     *\r\n     * @param {integer} tileX - The x coordinate.\r\n     * @param {integer} tileY - The y coordinate.\r\n     *\r\n     * @return {Phaser.Tilemaps.DynamicTilemapLayer} This Tilemap Layer object.\r\n     */\r\n    calculateFacesAt: function (tileX, tileY)\r\n    {\r\n        TilemapComponents.CalculateFacesAt(tileX, tileY, this.layer);\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Calculates interesting faces within the rectangular area specified (in tile coordinates) of the\r\n     * layer. Interesting faces are used internally for optimizing collisions against tiles. This method\r\n     * is mostly used internally.\r\n     *\r\n     * @method Phaser.Tilemaps.DynamicTilemapLayer#calculateFacesWithin\r\n     * @since 3.0.0\r\n     *\r\n     * @param {integer} [tileX=0] - [description]\r\n     * @param {integer} [tileY=0] - [description]\r\n     * @param {integer} [width=max width based on tileX] - [description]\r\n     * @param {integer} [height=max height based on tileY] - [description]\r\n     *\r\n     * @return {Phaser.Tilemaps.DynamicTilemapLayer} This Tilemap Layer object.\r\n     */\r\n    calculateFacesWithin: function (tileX, tileY, width, height)\r\n    {\r\n        TilemapComponents.CalculateFacesWithin(tileX, tileY, width, height, this.layer);\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Creates a Sprite for every object matching the given tile indexes in the layer. You can\r\n     * optionally specify if each tile will be replaced with a new tile after the Sprite has been\r\n     * created. This is useful if you want to lay down special tiles in a level that are converted to\r\n     * Sprites, but want to replace the tile itself with a floor tile or similar once converted.\r\n     *\r\n     * @method Phaser.Tilemaps.DynamicTilemapLayer#createFromTiles\r\n     * @since 3.0.0\r\n     *\r\n     * @param {(integer|array)} indexes - The tile index, or array of indexes, to create Sprites from.\r\n     * @param {(integer|array)} replacements - The tile index, or array of indexes, to change a converted\r\n     * tile to. Set to `null` to leave the tiles unchanged. If an array is given, it is assumed to be a\r\n     * one-to-one mapping with the indexes array.\r\n     * @param {object} spriteConfig - The config object to pass into the Sprite creator (i.e.\r\n     * scene.make.sprite).\r\n     * @param {Phaser.Scene} [scene=scene the map is within] - The Scene to create the Sprites within.\r\n     * @param {Phaser.Cameras.Scene2D.Camera} [camera=main camera] - The Camera to use when determining the world XY\r\n     *\r\n     * @return {Phaser.GameObjects.Sprite[]} An array of the Sprites that were created.\r\n     */\r\n    createFromTiles: function (indexes, replacements, spriteConfig, scene, camera)\r\n    {\r\n        return TilemapComponents.CreateFromTiles(indexes, replacements, spriteConfig, scene, camera, this.layer);\r\n    },\r\n\r\n    /**\r\n     * Returns the tiles in the given layer that are within the cameras viewport.\r\n     * This is used internally.\r\n     *\r\n     * @method Phaser.Tilemaps.DynamicTilemapLayer#cull\r\n     * @since 3.0.0\r\n     *\r\n     * @param {Phaser.Cameras.Scene2D.Camera} [camera] - The Camera to run the cull check against.\r\n     *\r\n     * @return {Phaser.Tilemaps.Tile[]} An array of Tile objects.\r\n     */\r\n    cull: function (camera)\r\n    {\r\n        return TilemapComponents.CullTiles(this.layer, camera, this.culledTiles);\r\n    },\r\n\r\n    /**\r\n     * Copies the tiles in the source rectangular area to a new destination (all specified in tile\r\n     * coordinates) within the layer. This copies all tile properties & recalculates collision\r\n     * information in the destination region.\r\n     *\r\n     * @method Phaser.Tilemaps.DynamicTilemapLayer#copy\r\n     * @since 3.0.0\r\n     *\r\n     * @param {integer} srcTileX - [description]\r\n     * @param {integer} srcTileY - [description]\r\n     * @param {integer} width - [description]\r\n     * @param {integer} height - [description]\r\n     * @param {integer} destTileX - [description]\r\n     * @param {integer} destTileY - [description]\r\n     * @param {boolean} [recalculateFaces=true] - [description]\r\n     *\r\n     * @return {Phaser.Tilemaps.DynamicTilemapLayer} This Tilemap Layer object.\r\n     */\r\n    copy: function (srcTileX, srcTileY, width, height, destTileX, destTileY, recalculateFaces)\r\n    {\r\n        TilemapComponents.Copy(srcTileX, srcTileY, width, height, destTileX, destTileY, recalculateFaces, this.layer);\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Destroys this DynamicTilemapLayer and removes its link to the associated LayerData.\r\n     *\r\n     * @method Phaser.Tilemaps.DynamicTilemapLayer#destroy\r\n     * @since 3.0.0\r\n     */\r\n    destroy: function ()\r\n    {\r\n        // Uninstall this layer only if it is still installed on the LayerData object\r\n        if (this.layer.tilemapLayer === this)\r\n        {\r\n            this.layer.tilemapLayer = undefined;\r\n        }\r\n\r\n        this.tilemap = undefined;\r\n        this.layer = undefined;\r\n        this.tileset = undefined;\r\n        this.culledTiles.length = 0;\r\n\r\n        GameObject.prototype.destroy.call(this);\r\n    },\r\n\r\n    /**\r\n     * Sets the tiles in the given rectangular area (in tile coordinates) of the layer with the\r\n     * specified index. Tiles will be set to collide if the given index is a colliding index.\r\n     * Collision information in the region will be recalculated.\r\n     *\r\n     * @method Phaser.Tilemaps.DynamicTilemapLayer#fill\r\n     * @since 3.0.0\r\n     *\r\n     * @param {integer} index - [description]\r\n     * @param {integer} [tileX=0] - [description]\r\n     * @param {integer} [tileY=0] - [description]\r\n     * @param {integer} [width=max width based on tileX] - [description]\r\n     * @param {integer} [height=max height based on tileY] - [description]\r\n     * @param {boolean} [recalculateFaces=true] - [description]\r\n     *\r\n     * @return {Phaser.Tilemaps.DynamicTilemapLayer} This Tilemap Layer object.\r\n     */\r\n    fill: function (index, tileX, tileY, width, height, recalculateFaces)\r\n    {\r\n        TilemapComponents.Fill(index, tileX, tileY, width, height, recalculateFaces, this.layer);\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * For each tile in the given rectangular area (in tile coordinates) of the layer, run the given\r\n     * filter callback function. Any tiles that pass the filter test (i.e. where the callback returns\r\n     * true) will returned as a new array. Similar to Array.prototype.Filter in vanilla JS.\r\n     *\r\n     * @method Phaser.Tilemaps.DynamicTilemapLayer#filterTiles\r\n     * @since 3.0.0\r\n     *\r\n     * @param {function} callback - The callback. Each tile in the given area will be passed to this\r\n     * callback as the first and only parameter. The callback should return true for tiles that pass the\r\n     * filter.\r\n     * @param {object} [context] - The context under which the callback should be run.\r\n     * @param {integer} [tileX=0] - [description]\r\n     * @param {integer} [tileY=0] - [description]\r\n     * @param {integer} [width=max width based on tileX] - [description]\r\n     * @param {integer} [height=max height based on tileY] - [description]\r\n     * @param {object} [filteringOptions] - Optional filters to apply when getting the tiles.\r\n     * @param {boolean} [filteringOptions.isNotEmpty=false] - If true, only return tiles that don't have\r\n     * -1 for an index.\r\n     * @param {boolean} [filteringOptions.isColliding=false] - If true, only return tiles that collide\r\n     * on at least one side.\r\n     * @param {boolean} [filteringOptions.hasInterestingFace=false] - If true, only return tiles that\r\n     * have at least one interesting face.\r\n     *\r\n     * @return {Phaser.Tilemaps.Tile[]} An array of Tile objects.\r\n     */\r\n    filterTiles: function (callback, context, tileX, tileY, width, height, filteringOptions)\r\n    {\r\n        return TilemapComponents.FilterTiles(callback, context, tileX, tileY, width, height, filteringOptions, this.layer);\r\n    },\r\n\r\n    /**\r\n     * Searches the entire map layer for the first tile matching the given index, then returns that Tile\r\n     * object. If no match is found, it returns null. The search starts from the top-left tile and\r\n     * continues horizontally until it hits the end of the row, then it drops down to the next column.\r\n     * If the reverse boolean is true, it scans starting from the bottom-right corner traveling up to\r\n     * the top-left.\r\n     *\r\n     * @method Phaser.Tilemaps.DynamicTilemapLayer#findByIndex\r\n     * @since 3.0.0\r\n     *\r\n     * @param {integer} index - The tile index value to search for.\r\n     * @param {integer} [skip=0] - The number of times to skip a matching tile before returning.\r\n     * @param {boolean} [reverse=false] - If true it will scan the layer in reverse, starting at the\r\n     * bottom-right. Otherwise it scans from the top-left.\r\n     *\r\n     * @return {Phaser.Tilemaps.Tile} A Tile object.\r\n     */\r\n    findByIndex: function (findIndex, skip, reverse)\r\n    {\r\n        return TilemapComponents.FindByIndex(findIndex, skip, reverse, this.layer);\r\n    },\r\n\r\n    /**\r\n     * Find the first tile in the given rectangular area (in tile coordinates) of the layer that\r\n     * satisfies the provided testing function. I.e. finds the first tile for which `callback` returns\r\n     * true. Similar to Array.prototype.find in vanilla JS.\r\n     *\r\n     * @method Phaser.Tilemaps.DynamicTilemapLayer#findTile\r\n     * @since 3.0.0\r\n     *\r\n     * @param {function} callback - The callback. Each tile in the given area will be passed to this\r\n     * callback as the first and only parameter.\r\n     * @param {object} [context] - The context under which the callback should be run.\r\n     * @param {integer} [tileX=0] - [description]\r\n     * @param {integer} [tileY=0] - [description]\r\n     * @param {integer} [width=max width based on tileX] - [description]\r\n     * @param {integer} [height=max height based on tileY] - [description]\r\n     * @param {object} [filteringOptions] - Optional filters to apply when getting the tiles.\r\n     * @param {boolean} [filteringOptions.isNotEmpty=false] - If true, only return tiles that don't have\r\n     * -1 for an index.\r\n     * @param {boolean} [filteringOptions.isColliding=false] - If true, only return tiles that collide\r\n     * on at least one side.\r\n     * @param {boolean} [filteringOptions.hasInterestingFace=false] - If true, only return tiles that\r\n     * have at least one interesting face.\r\n     *\r\n     * @return {?Phaser.Tilemaps.Tile}\r\n     */\r\n    findTile: function (callback, context, tileX, tileY, width, height, filteringOptions)\r\n    {\r\n        return TilemapComponents.FindTile(callback, context, tileX, tileY, width, height, filteringOptions, this.layer);\r\n    },\r\n\r\n    /**\r\n     * For each tile in the given rectangular area (in tile coordinates) of the layer, run the given\r\n     * callback. Similar to Array.prototype.forEach in vanilla JS.\r\n     *\r\n     * @method Phaser.Tilemaps.DynamicTilemapLayer#forEachTile\r\n     * @since 3.0.0\r\n     *\r\n     * @param {function} callback - The callback. Each tile in the given area will be passed to this\r\n     * callback as the first and only parameter.\r\n     * @param {object} [context] - The context under which the callback should be run.\r\n     * @param {integer} [tileX=0] - [description]\r\n     * @param {integer} [tileY=0] - [description]\r\n     * @param {integer} [width=max width based on tileX] - [description]\r\n     * @param {integer} [height=max height based on tileY] - [description]\r\n     * @param {object} [filteringOptions] - Optional filters to apply when getting the tiles.\r\n     * @param {boolean} [filteringOptions.isNotEmpty=false] - If true, only return tiles that don't have\r\n     * -1 for an index.\r\n     * @param {boolean} [filteringOptions.isColliding=false] - If true, only return tiles that collide\r\n     * on at least one side.\r\n     * @param {boolean} [filteringOptions.hasInterestingFace=false] - If true, only return tiles that\r\n     * have at least one interesting face.\r\n     *\r\n     * @return {Phaser.Tilemaps.DynamicTilemapLayer} This Tilemap Layer object.\r\n     */\r\n    forEachTile: function (callback, context, tileX, tileY, width, height, filteringOptions)\r\n    {\r\n        TilemapComponents.ForEachTile(callback, context, tileX, tileY, width, height, filteringOptions, this.layer);\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Gets a tile at the given tile coordinates from the given layer.\r\n     *\r\n     * @method Phaser.Tilemaps.DynamicTilemapLayer#getTileAt\r\n     * @since 3.0.0\r\n     *\r\n     * @param {integer} tileX - X position to get the tile from (given in tile units, not pixels).\r\n     * @param {integer} tileY - Y position to get the tile from (given in tile units, not pixels).\r\n     * @param {boolean} [nonNull=false] - If true getTile won't return null for empty tiles, but a Tile\r\n     * object with an index of -1.\r\n     *\r\n     * @return {Phaser.Tilemaps.Tile} The tile at the given coordinates or null if no tile was found or the coordinates were invalid.\r\n     */\r\n    getTileAt: function (tileX, tileY, nonNull)\r\n    {\r\n        return TilemapComponents.GetTileAt(tileX, tileY, nonNull, this.layer);\r\n    },\r\n\r\n    /**\r\n     * Gets a tile at the given world coordinates from the given layer.\r\n     *\r\n     * @method Phaser.Tilemaps.DynamicTilemapLayer#getTileAtWorldXY\r\n     * @since 3.0.0\r\n     *\r\n     * @param {number} worldX - X position to get the tile from (given in pixels)\r\n     * @param {number} worldY - Y position to get the tile from (given in pixels)\r\n     * @param {boolean} [nonNull=false] - If true, function won't return null for empty tiles, but a Tile\r\n     * object with an index of -1.\r\n     * @param {Phaser.Cameras.Scene2D.Camera} [camera=main camera] - [description]\r\n     *\r\n     * @return {Phaser.Tilemaps.Tile} The tile at the given coordinates or null if no tile was found or the coordinates\r\n     * were invalid.\r\n     */\r\n    getTileAtWorldXY: function (worldX, worldY, nonNull, camera)\r\n    {\r\n        return TilemapComponents.GetTileAtWorldXY(worldX, worldY, nonNull, camera, this.layer);\r\n    },\r\n\r\n    /**\r\n     * Gets the tiles in the given rectangular area (in tile coordinates) of the layer.\r\n     *\r\n     * @method Phaser.Tilemaps.DynamicTilemapLayer#getTilesWithin\r\n     * @since 3.0.0\r\n     *\r\n     * @param {integer} [tileX=0] - [description]\r\n     * @param {integer} [tileY=0] - [description]\r\n     * @param {integer} [width=max width based on tileX] - [description]\r\n     * @param {integer} [height=max height based on tileY] - [description]\r\n     * @param {object} [filteringOptions] - Optional filters to apply when getting the tiles.\r\n     * @param {boolean} [filteringOptions.isNotEmpty=false] - If true, only return tiles that don't have\r\n     * -1 for an index.\r\n     * @param {boolean} [filteringOptions.isColliding=false] - If true, only return tiles that collide on\r\n     * at least one side.\r\n     * @param {boolean} [filteringOptions.hasInterestingFace=false] - If true, only return tiles that\r\n     * have at least one interesting face.\r\n     *\r\n     * @return {Phaser.Tilemaps.Tile[]} An array of Tile objects.\r\n     */\r\n    getTilesWithin: function (tileX, tileY, width, height, filteringOptions)\r\n    {\r\n        return TilemapComponents.GetTilesWithin(tileX, tileY, width, height, filteringOptions, this.layer);\r\n    },\r\n\r\n    /**\r\n     * Gets the tiles that overlap with the given shape in the given layer. The shape must be a Circle,\r\n     * Line, Rectangle or Triangle. The shape should be in world coordinates.\r\n     *\r\n     * @method Phaser.Tilemaps.DynamicTilemapLayer#getTilesWithinShape\r\n     * @since 3.0.0\r\n     *\r\n     * @param {(Phaser.Geom.Circle|Phaser.Geom.Line|Phaser.Geom.Rectangle|Phaser.Geom.Triangle)} shape - A shape in world (pixel) coordinates\r\n     * @param {object} [filteringOptions] - Optional filters to apply when getting the tiles.\r\n     * @param {boolean} [filteringOptions.isNotEmpty=false] - If true, only return tiles that don't have\r\n     * -1 for an index.\r\n     * @param {boolean} [filteringOptions.isColliding=false] - If true, only return tiles that collide on\r\n     * at least one side.\r\n     * @param {boolean} [filteringOptions.hasInterestingFace=false] - If true, only return tiles that\r\n     * have at least one interesting face.\r\n     * @param {Phaser.Cameras.Scene2D.Camera} [camera=main camera] - [description]\r\n     *\r\n     * @return {Phaser.Tilemaps.Tile[]} An array of Tile objects.\r\n     */\r\n    getTilesWithinShape: function (shape, filteringOptions, camera)\r\n    {\r\n        return TilemapComponents.GetTilesWithinShape(shape, filteringOptions, camera, this.layer);\r\n    },\r\n\r\n    /**\r\n     * Gets the tiles in the given rectangular area (in world coordinates) of the layer.\r\n     *\r\n     * @method Phaser.Tilemaps.DynamicTilemapLayer#getTilesWithinWorldXY\r\n     * @since 3.0.0\r\n     *\r\n     * @param {number} worldX - [description]\r\n     * @param {number} worldY - [description]\r\n     * @param {number} width - [description]\r\n     * @param {number} height - [description]\r\n     * @param {object} [filteringOptions] - Optional filters to apply when getting the tiles.\r\n     * @param {boolean} [filteringOptions.isNotEmpty=false] - If true, only return tiles that don't have\r\n     * -1 for an index.\r\n     * @param {boolean} [filteringOptions.isColliding=false] - If true, only return tiles that collide on\r\n     * at least one side.\r\n     * @param {boolean} [filteringOptions.hasInterestingFace=false] - If true, only return tiles that\r\n     * have at least one interesting face.\r\n     * @param {Phaser.Cameras.Scene2D.Camera} [camera=main camera] - [description]\r\n     *\r\n     * @return {Phaser.Tilemaps.Tile[]} An array of Tile objects.\r\n     */\r\n    getTilesWithinWorldXY: function (worldX, worldY, width, height, filteringOptions, camera)\r\n    {\r\n        return TilemapComponents.GetTilesWithinWorldXY(worldX, worldY, width, height, filteringOptions, camera, this.layer);\r\n    },\r\n\r\n    /**\r\n     * Checks if there is a tile at the given location (in tile coordinates) in the given layer. Returns\r\n     * false if there is no tile or if the tile at that location has an index of -1.\r\n     *\r\n     * @method Phaser.Tilemaps.DynamicTilemapLayer#hasTileAt\r\n     * @since 3.0.0\r\n     *\r\n     * @param {integer} tileX - [description]\r\n     * @param {integer} tileY - [description]\r\n     *\r\n     * @return {boolean}\r\n     */\r\n    hasTileAt: function (tileX, tileY)\r\n    {\r\n        return TilemapComponents.HasTileAt(tileX, tileY, this.layer);\r\n    },\r\n\r\n    /**\r\n     * Checks if there is a tile at the given location (in world coordinates) in the given layer. Returns\r\n     * false if there is no tile or if the tile at that location has an index of -1.\r\n     *\r\n     * @method Phaser.Tilemaps.DynamicTilemapLayer#hasTileAtWorldXY\r\n     * @since 3.0.0\r\n     *\r\n     * @param {number} worldX - [description]\r\n     * @param {number} worldY - [description]\r\n     * @param {Phaser.Cameras.Scene2D.Camera} [camera=main camera] - [description]\r\n     *\r\n     * @return {boolean}\r\n     */\r\n    hasTileAtWorldXY: function (worldX, worldY, camera)\r\n    {\r\n        return TilemapComponents.HasTileAtWorldXY(worldX, worldY, camera, this.layer);\r\n    },\r\n\r\n    /**\r\n     * Puts a tile at the given tile coordinates in the specified layer. You can pass in either an index\r\n     * or a Tile object. If you pass in a Tile, all attributes will be copied over to the specified\r\n     * location. If you pass in an index, only the index at the specified location will be changed.\r\n     * Collision information will be recalculated at the specified location.\r\n     *\r\n     * @method Phaser.Tilemaps.DynamicTilemapLayer#putTileAt\r\n     * @since 3.0.0\r\n     *\r\n     * @param {(integer|Phaser.Tilemaps.Tile)} tile - The index of this tile to set or a Tile object.\r\n     * @param {integer} tileX - [description]\r\n     * @param {integer} tileY - [description]\r\n     * @param {boolean} [recalculateFaces=true] - [description]\r\n     *\r\n     * @return {Phaser.Tilemaps.Tile} A Tile object.\r\n     */\r\n    putTileAt: function (tile, tileX, tileY, recalculateFaces)\r\n    {\r\n        return TilemapComponents.PutTileAt(tile, tileX, tileY, recalculateFaces, this.layer);\r\n    },\r\n\r\n    /**\r\n     * Puts a tile at the given world coordinates (pixels) in the specified layer. You can pass in either\r\n     * an index or a Tile object. If you pass in a Tile, all attributes will be copied over to the\r\n     * specified location. If you pass in an index, only the index at the specified location will be\r\n     * changed. Collision information will be recalculated at the specified location.\r\n     *\r\n     * @method Phaser.Tilemaps.DynamicTilemapLayer#putTileAtWorldXY\r\n     * @since 3.0.0\r\n     *\r\n     * @param {(integer|Phaser.Tilemaps.Tile)} tile - The index of this tile to set or a Tile object.\r\n     * @param {integer} worldX - [description]\r\n     * @param {integer} worldY - [description]\r\n     * @param {boolean} [recalculateFaces=true] - [description]\r\n     * @param {Phaser.Cameras.Scene2D.Camera} [camera] - [description]\r\n     *\r\n     * @return {Phaser.Tilemaps.Tile} A Tile object.\r\n     */\r\n    putTileAtWorldXY: function (tile, worldX, worldY, recalculateFaces, camera)\r\n    {\r\n        return TilemapComponents.PutTileAtWorldXY(tile, worldX, worldY, recalculateFaces, camera, this.layer);\r\n    },\r\n\r\n    /**\r\n     * Puts an array of tiles or a 2D array of tiles at the given tile coordinates in the specified\r\n     * layer. The array can be composed of either tile indexes or Tile objects. If you pass in a Tile,\r\n     * all attributes will be copied over to the specified location. If you pass in an index, only the\r\n     * index at the specified location will be changed. Collision information will be recalculated\r\n     * within the region tiles were changed.\r\n     *\r\n     * @method Phaser.Tilemaps.DynamicTilemapLayer#putTilesAt\r\n     * @since 3.0.0\r\n     *\r\n     * @param {(integer[]|integer[][]|Phaser.Tilemaps.Tile[]|Phaser.Tilemaps.Tile[][])} tile - A row (array) or grid (2D array) of Tiles\r\n     * or tile indexes to place.\r\n     * @param {integer} tileX - [description]\r\n     * @param {integer} tileY - [description]\r\n     * @param {boolean} [recalculateFaces=true] - [description]\r\n     *\r\n     * @return {Phaser.Tilemaps.DynamicTilemapLayer} This Tilemap Layer object.\r\n     */\r\n    putTilesAt: function (tilesArray, tileX, tileY, recalculateFaces)\r\n    {\r\n        TilemapComponents.PutTilesAt(tilesArray, tileX, tileY, recalculateFaces, this.layer);\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Randomizes the indexes of a rectangular region of tiles (in tile coordinates) within the\r\n     * specified layer. Each tile will receive a new index. If an array of indexes is passed in, then\r\n     * those will be used for randomly assigning new tile indexes. If an array is not provided, the\r\n     * indexes found within the region (excluding -1) will be used for randomly assigning new tile\r\n     * indexes. This method only modifies tile indexes and does not change collision information.\r\n     *\r\n     * @method Phaser.Tilemaps.DynamicTilemapLayer#randomize\r\n     * @since 3.0.0\r\n     *\r\n     * @param {integer} [tileX=0] - [description]\r\n     * @param {integer} [tileY=0] - [description]\r\n     * @param {integer} [width=max width based on tileX] - [description]\r\n     * @param {integer} [height=max height based on tileY] - [description]\r\n     * @param {integer[]} [indexes] - An array of indexes to randomly draw from during randomization.\r\n     *\r\n     * @return {Phaser.Tilemaps.DynamicTilemapLayer} This Tilemap Layer object.\r\n     */\r\n    randomize: function (tileX, tileY, width, height, indexes)\r\n    {\r\n        TilemapComponents.Randomize(tileX, tileY, width, height, indexes, this.layer);\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Removes the tile at the given tile coordinates in the specified layer and updates the layer's\r\n     * collision information.\r\n     *\r\n     * @method Phaser.Tilemaps.DynamicTilemapLayer#removeTileAt\r\n     * @since 3.0.0\r\n     *\r\n     * @param {(integer|Phaser.Tilemaps.Tile)} tile - The index of this tile to set or a Tile object.\r\n     * @param {integer} tileX - [description]\r\n     * @param {integer} tileY - [description]\r\n     * @param {boolean} [replaceWithNull=true] - If true, this will replace the tile at the specified\r\n     * location with null instead of a Tile with an index of -1.\r\n     * @param {boolean} [recalculateFaces=true] - [description]\r\n     *\r\n     * @return {Phaser.Tilemaps.Tile} A Tile object.\r\n     */\r\n    removeTileAt: function (tileX, tileY, replaceWithNull, recalculateFaces)\r\n    {\r\n        return TilemapComponents.RemoveTileAt(tileX, tileY, replaceWithNull, recalculateFaces, this.layer);\r\n    },\r\n\r\n    /**\r\n     * Removes the tile at the given world coordinates in the specified layer and updates the layer's\r\n     * collision information.\r\n     *\r\n     * @method Phaser.Tilemaps.DynamicTilemapLayer#removeTileAtWorldXY\r\n     * @since 3.0.0\r\n     *\r\n     * @param {(integer|Phaser.Tilemaps.Tile)} tile - The index of this tile to set or a Tile object.\r\n     * @param {number} worldX - [description]\r\n     * @param {number} worldY - [description]\r\n     * @param {boolean} [replaceWithNull=true] - If true, this will replace the tile at the specified\r\n     * location with null instead of a Tile with an index of -1.\r\n     * @param {boolean} [recalculateFaces=true] - [description]\r\n     * @param {Phaser.Cameras.Scene2D.Camera} [camera=main camera] - [description]\r\n     *\r\n     * @return {Phaser.Tilemaps.Tile} A Tile object.\r\n     */\r\n    removeTileAtWorldXY: function (worldX, worldY, replaceWithNull, recalculateFaces, camera)\r\n    {\r\n        return TilemapComponents.RemoveTileAtWorldXY(worldX, worldY, replaceWithNull, recalculateFaces, camera, this.layer);\r\n    },\r\n\r\n    /**\r\n     * Draws a debug representation of the layer to the given Graphics. This is helpful when you want to\r\n     * get a quick idea of which of your tiles are colliding and which have interesting faces. The tiles\r\n     * are drawn starting at (0, 0) in the Graphics, allowing you to place the debug representation\r\n     * wherever you want on the screen.\r\n     *\r\n     * @method Phaser.Tilemaps.DynamicTilemapLayer#renderDebug\r\n     * @since 3.0.0\r\n     *\r\n     * @param {Phaser.GameObjects.Graphics} graphics - The target Graphics object to draw upon.\r\n     * @param {object} styleConfig - An object specifying the colors to use for the debug drawing.\r\n     * @param {?Color} [styleConfig.tileColor=blue] - Color to use for drawing a filled rectangle at\r\n     * non-colliding tile locations. If set to null, non-colliding tiles will not be drawn.\r\n     * @param {?Color} [styleConfig.collidingTileColor=orange] - Color to use for drawing a filled\r\n     * rectangle at colliding tile locations. If set to null, colliding tiles will not be drawn.\r\n     * @param {?Color} [styleConfig.faceColor=grey] - Color to use for drawing a line at interesting\r\n     * tile faces. If set to null, interesting tile faces will not be drawn.\r\n     *\r\n     * @return {Phaser.Tilemaps.DynamicTilemapLayer} This Tilemap Layer object.\r\n     */\r\n    renderDebug: function (graphics, styleConfig)\r\n    {\r\n        TilemapComponents.RenderDebug(graphics, styleConfig, this.layer);\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Scans the given rectangular area (given in tile coordinates) for tiles with an index matching\r\n     * `findIndex` and updates their index to match `newIndex`. This only modifies the index and does\r\n     * not change collision information.\r\n     *\r\n     * @method Phaser.Tilemaps.DynamicTilemapLayer#replaceByIndex\r\n     * @since 3.0.0\r\n     *\r\n     * @param {integer} findIndex - [description]\r\n     * @param {integer} newIndex - [description]\r\n     * @param {integer} [tileX=0] - [description]\r\n     * @param {integer} [tileY=0] - [description]\r\n     * @param {integer} [width=max width based on tileX] - [description]\r\n     * @param {integer} [height=max height based on tileY] - [description]\r\n     *\r\n     * @return {Phaser.Tilemaps.DynamicTilemapLayer} This Tilemap Layer object.\r\n     */\r\n    replaceByIndex: function (findIndex, newIndex, tileX, tileY, width, height)\r\n    {\r\n        TilemapComponents.ReplaceByIndex(findIndex, newIndex, tileX, tileY, width, height, this.layer);\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Sets collision on the given tile or tiles within a layer by index. You can pass in either a\r\n     * single numeric index or an array of indexes: [2, 3, 15, 20]. The `collides` parameter controls if\r\n     * collision will be enabled (true) or disabled (false).\r\n     *\r\n     * @method Phaser.Tilemaps.DynamicTilemapLayer#setCollision\r\n     * @since 3.0.0\r\n     *\r\n     * @param {(integer|array)} indexes - Either a single tile index, or an array of tile indexes.\r\n     * @param {boolean} [collides=true] - If true it will enable collision. If false it will clear\r\n     * collision.\r\n     * @param {boolean} [recalculateFaces=true] - Whether or not to recalculate the tile faces after the\r\n     * update.\r\n     *\r\n     * @return {Phaser.Tilemaps.DynamicTilemapLayer} This Tilemap Layer object.\r\n     */\r\n    setCollision: function (indexes, collides, recalculateFaces)\r\n    {\r\n        TilemapComponents.SetCollision(indexes, collides, recalculateFaces, this.layer);\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Sets collision on a range of tiles in a layer whose index is between the specified `start` and\r\n     * `stop` (inclusive). Calling this with a start value of 10 and a stop value of 14 would set\r\n     * collision for tiles 10, 11, 12, 13 and 14. The `collides` parameter controls if collision will be\r\n     * enabled (true) or disabled (false).\r\n     *\r\n     * @method Phaser.Tilemaps.DynamicTilemapLayer#setCollisionBetween\r\n     * @since 3.0.0\r\n     *\r\n     * @param {integer} start - The first index of the tile to be set for collision.\r\n     * @param {integer} stop - The last index of the tile to be set for collision.\r\n     * @param {boolean} [collides=true] - If true it will enable collision. If false it will clear\r\n     * collision.\r\n     * @param {boolean} [recalculateFaces=true] - Whether or not to recalculate the tile faces after the\r\n     * update.\r\n     *\r\n     * @return {Phaser.Tilemaps.DynamicTilemapLayer} This Tilemap Layer object.\r\n     */\r\n    setCollisionBetween: function (start, stop, collides, recalculateFaces)\r\n    {\r\n        TilemapComponents.SetCollisionBetween(start, stop, collides, recalculateFaces, this.layer);\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Sets collision on the tiles within a layer by checking tile properties. If a tile has a property\r\n     * that matches the given properties object, its collision flag will be set. The `collides`\r\n     * parameter controls if collision will be enabled (true) or disabled (false). Passing in\r\n     * `{ collides: true }` would update the collision flag on any tiles with a \"collides\" property that\r\n     * has a value of true. Any tile that doesn't have \"collides\" set to true will be ignored. You can\r\n     * also use an array of values, e.g. `{ types: [\"stone\", \"lava\", \"sand\" ] }`. If a tile has a\r\n     * \"types\" property that matches any of those values, its collision flag will be updated.\r\n     *\r\n     * @method Phaser.Tilemaps.DynamicTilemapLayer#setCollisionByProperty\r\n     * @since 3.0.0\r\n     *\r\n     * @param {object} properties - An object with tile properties and corresponding values that should\r\n     * be checked.\r\n     * @param {boolean} [collides=true] - If true it will enable collision. If false it will clear\r\n     * collision.\r\n     * @param {boolean} [recalculateFaces=true] - Whether or not to recalculate the tile faces after the\r\n     * update.\r\n     *\r\n     * @return {Phaser.Tilemaps.DynamicTilemapLayer} This Tilemap Layer object.\r\n     */\r\n    setCollisionByProperty: function (properties, collides, recalculateFaces)\r\n    {\r\n        TilemapComponents.SetCollisionByProperty(properties, collides, recalculateFaces, this.layer);\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Sets collision on all tiles in the given layer, except for tiles that have an index specified in\r\n     * the given array. The `collides` parameter controls if collision will be enabled (true) or\r\n     * disabled (false).\r\n     *\r\n     * @method Phaser.Tilemaps.DynamicTilemapLayer#setCollisionByExclusion\r\n     * @since 3.0.0\r\n     *\r\n     * @param {integer[]} indexes - An array of the tile indexes to not be counted for collision.\r\n     * @param {boolean} [collides=true] - If true it will enable collision. If false it will clear\r\n     * collision.\r\n     * @param {boolean} [recalculateFaces=true] - Whether or not to recalculate the tile faces after the\r\n     * update.\r\n     *\r\n     * @return {Phaser.Tilemaps.DynamicTilemapLayer} This Tilemap Layer object.\r\n     */\r\n    setCollisionByExclusion: function (indexes, collides, recalculateFaces)\r\n    {\r\n        TilemapComponents.SetCollisionByExclusion(indexes, collides, recalculateFaces, this.layer);\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Sets collision on the tiles within a layer by checking each tiles collision group data\r\n     * (typically defined in Tiled within the tileset collision editor). If any objects are found within\r\n     * a tiles collision group, the tile's colliding information will be set. The `collides` parameter\r\n     * controls if collision will be enabled (true) or disabled (false).\r\n     *\r\n     * @method Phaser.Tilemaps.DynamicTilemapLayer#setCollisionFromCollisionGroup\r\n     * @since 3.0.0\r\n     *\r\n     * @param {boolean} [collides=true] - If true it will enable collision. If false it will clear\r\n     * collision.\r\n     * @param {boolean} [recalculateFaces=true] - Whether or not to recalculate the tile faces after the\r\n     * update.\r\n     *\r\n     * @return {Phaser.Tilemaps.DynamicTilemapLayer} This Tilemap Layer object.\r\n     */\r\n    setCollisionFromCollisionGroup: function (collides, recalculateFaces)\r\n    {\r\n        TilemapComponents.SetCollisionFromCollisionGroup(collides, recalculateFaces, this.layer);\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Sets a global collision callback for the given tile index within the layer. This will affect all\r\n     * tiles on this layer that have the same index. If a callback is already set for the tile index it\r\n     * will be replaced. Set the callback to null to remove it. If you want to set a callback for a tile\r\n     * at a specific location on the map then see setTileLocationCallback.\r\n     *\r\n     * @method Phaser.Tilemaps.DynamicTilemapLayer#setTileIndexCallback\r\n     * @since 3.0.0\r\n     *\r\n     * @param {(integer|array)} indexes - Either a single tile index, or an array of tile indexes to have a\r\n     * collision callback set for.\r\n     * @param {function} callback - The callback that will be invoked when the tile is collided with.\r\n     * @param {object} callbackContext - The context under which the callback is called.\r\n     *\r\n     * @return {Phaser.Tilemaps.DynamicTilemapLayer} This Tilemap Layer object.\r\n     */\r\n    setTileIndexCallback: function (indexes, callback, callbackContext)\r\n    {\r\n        TilemapComponents.SetTileIndexCallback(indexes, callback, callbackContext, this.layer);\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Sets a collision callback for the given rectangular area (in tile coordinates) within the layer.\r\n     * If a callback is already set for the tile index it will be replaced. Set the callback to null to\r\n     * remove it.\r\n     *\r\n     * @method Phaser.Tilemaps.DynamicTilemapLayer#setTileLocationCallback\r\n     * @since 3.0.0\r\n     *\r\n     * @param {integer} tileX - [description]\r\n     * @param {integer} tileY - [description]\r\n     * @param {integer} width - [description]\r\n     * @param {integer} height - [description]\r\n     * @param {function} callback - The callback that will be invoked when the tile is collided with.\r\n     * @param {object} [callbackContext] - The context under which the callback is called.\r\n     *\r\n     * @return {Phaser.Tilemaps.DynamicTilemapLayer} This Tilemap Layer object.\r\n     */\r\n    setTileLocationCallback: function (tileX, tileY, width, height, callback, callbackContext)\r\n    {\r\n        TilemapComponents.SetTileLocationCallback(tileX, tileY, width, height, callback, callbackContext, this.layer);\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Shuffles the tiles in a rectangular region (specified in tile coordinates) within the given\r\n     * layer. It will only randomize the tiles in that area, so if they're all the same nothing will\r\n     * appear to have changed! This method only modifies tile indexes and does not change collision\r\n     * information.\r\n     *\r\n     * @method Phaser.Tilemaps.DynamicTilemapLayer#shuffle\r\n     * @since 3.0.0\r\n     *\r\n     * @param {integer} [tileX=0] - [description]\r\n     * @param {integer} [tileY=0] - [description]\r\n     * @param {integer} [width=max width based on tileX] - [description]\r\n     * @param {integer} [height=max height based on tileY] - [description]\r\n     *\r\n     * @return {Phaser.Tilemaps.DynamicTilemapLayer} This Tilemap Layer object.\r\n     */\r\n    shuffle: function (tileX, tileY, width, height)\r\n    {\r\n        TilemapComponents.Shuffle(tileX, tileY, width, height, this.layer);\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Scans the given rectangular area (given in tile coordinates) for tiles with an index matching\r\n     * `indexA` and swaps then with `indexB`. This only modifies the index and does not change collision\r\n     * information.\r\n     *\r\n     * @method Phaser.Tilemaps.DynamicTilemapLayer#swapByIndex\r\n     * @since 3.0.0\r\n     *\r\n     * @param {integer} tileA - First tile index.\r\n     * @param {integer} tileB - Second tile index.\r\n     * @param {integer} [tileX=0] - [description]\r\n     * @param {integer} [tileY=0] - [description]\r\n     * @param {integer} [width=max width based on tileX] - [description]\r\n     * @param {integer} [height=max height based on tileY] - [description]\r\n     *\r\n     * @return {Phaser.Tilemaps.DynamicTilemapLayer} This Tilemap Layer object.\r\n     */\r\n    swapByIndex: function (indexA, indexB, tileX, tileY, width, height)\r\n    {\r\n        TilemapComponents.SwapByIndex(indexA, indexB, tileX, tileY, width, height, this.layer);\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Converts from tile X coordinates (tile units) to world X coordinates (pixels), factoring in the\r\n     * layers position, scale and scroll.\r\n     *\r\n     * @method Phaser.Tilemaps.DynamicTilemapLayer#tileToWorldX\r\n     * @since 3.0.0\r\n     *\r\n     * @param {integer} tileX - [description]\r\n     * @param {Phaser.Cameras.Scene2D.Camera} [camera=main camera] - [description]\r\n     *\r\n     * @return {number}\r\n     */\r\n    tileToWorldX: function (tileX, camera)\r\n    {\r\n        return TilemapComponents.TileToWorldX(tileX, camera, this.layer);\r\n    },\r\n\r\n    /**\r\n     * Converts from tile Y coordinates (tile units) to world Y coordinates (pixels), factoring in the\r\n     * layers position, scale and scroll.\r\n     *\r\n     * @method Phaser.Tilemaps.DynamicTilemapLayer#tileToWorldY\r\n     * @since 3.0.0\r\n     *\r\n     * @param {integer} tileY - [description]\r\n     * @param {Phaser.Cameras.Scene2D.Camera} [camera=main camera] - [description]\r\n     *\r\n     * @return {number}\r\n     */\r\n    tileToWorldY: function (tileY, camera)\r\n    {\r\n        return TilemapComponents.TileToWorldY(tileY, camera, this.layer);\r\n    },\r\n\r\n    /**\r\n     * Converts from tile XY coordinates (tile units) to world XY coordinates (pixels), factoring in the\r\n     * layers position, scale and scroll. This will return a new Vector2 object or update the given\r\n     * `point` object.\r\n     *\r\n     * @method Phaser.Tilemaps.DynamicTilemapLayer#tileToWorldXY\r\n     * @since 3.0.0\r\n     *\r\n     * @param {integer} tileX - [description]\r\n     * @param {integer} tileY - [description]\r\n     * @param {Phaser.Math.Vector2} [point] - [description]\r\n     * @param {Phaser.Cameras.Scene2D.Camera} [camera=main camera] - [description]\r\n     *\r\n     * @return {Phaser.Math.Vector2}\r\n     */\r\n    tileToWorldXY: function (tileX, tileY, point, camera)\r\n    {\r\n        return TilemapComponents.TileToWorldXY(tileX, tileY, point, camera, this.layer);\r\n    },\r\n\r\n    /**\r\n     * Randomizes the indexes of a rectangular region of tiles (in tile coordinates) within the\r\n     * specified layer. Each tile will recieve a new index. New indexes are drawn from the given\r\n     * weightedIndexes array. An example weighted array:\r\n     *\r\n     * [\r\n     *  { index: 6, weight: 4 },    // Probability of index 6 is 4 / 8\r\n     *  { index: 7, weight: 2 },    // Probability of index 7 would be 2 / 8\r\n     *  { index: 8, weight: 1.5 },  // Probability of index 8 would be 1.5 / 8\r\n     *  { index: 26, weight: 0.5 }  // Probability of index 27 would be 0.5 / 8\r\n     * ]\r\n     *\r\n     * The probability of any index being choose is (the index's weight) / (sum of all weights). This\r\n     * method only modifies tile indexes and does not change collision information.\r\n     *\r\n     * @method Phaser.Tilemaps.DynamicTilemapLayer#weightedRandomize\r\n     * @since 3.0.0\r\n     *\r\n     * @param {integer} [tileX=0] - [description]\r\n     * @param {integer} [tileY=0] - [description]\r\n     * @param {integer} [width=max width based on tileX] - [description]\r\n     * @param {integer} [height=max height based on tileY] - [description]\r\n     * @param {object[]} [weightedIndexes] - An array of objects to randomly draw from during\r\n     * randomization. They should be in the form: { index: 0, weight: 4 } or\r\n     * { index: [0, 1], weight: 4 } if you wish to draw from multiple tile indexes.\r\n     *\r\n     * @return {Phaser.Tilemaps.DynamicTilemapLayer} This Tilemap Layer object.\r\n     */\r\n    weightedRandomize: function (tileX, tileY, width, height, weightedIndexes)\r\n    {\r\n        TilemapComponents.WeightedRandomize(tileX, tileY, width, height, weightedIndexes, this.layer);\r\n\r\n        return this;\r\n    },\r\n\r\n    /**\r\n     * Converts from world X coordinates (pixels) to tile X coordinates (tile units), factoring in the\r\n     * layers position, scale and scroll.\r\n     *\r\n     * @method Phaser.Tilemaps.DynamicTilemapLayer#worldToTileX\r\n     * @since 3.0.0\r\n     *\r\n     * @param {number} worldX - [description]\r\n     * @param {boolean} [snapToFloor=true] - Whether or not to round the tile coordinate down to the\r\n     * nearest integer.\r\n     * @param {Phaser.Cameras.Scene2D.Camera} [camera=main camera] - [description]\r\n     *\r\n     * @return {number}\r\n     */\r\n    worldToTileX: function (worldX, snapToFloor, camera)\r\n    {\r\n        return TilemapComponents.WorldToTileX(worldX, snapToFloor, camera, this.layer);\r\n    },\r\n\r\n    /**\r\n     * Converts from world Y coordinates (pixels) to tile Y coordinates (tile units), factoring in the\r\n     * layers position, scale and scroll.\r\n     *\r\n     * @method Phaser.Tilemaps.DynamicTilemapLayer#worldToTileY\r\n     * @since 3.0.0\r\n     *\r\n     * @param {number} worldY - [description]\r\n     * @param {boolean} [snapToFloor=true] - Whether or not to round the tile coordinate down to the\r\n     * nearest integer.\r\n     * @param {Phaser.Cameras.Scene2D.Camera} [camera=main camera] - [description]\r\n     *\r\n     * @return {number}\r\n     */\r\n    worldToTileY: function (worldY, snapToFloor, camera)\r\n    {\r\n        return TilemapComponents.WorldToTileY(worldY, snapToFloor, camera, this.layer);\r\n    },\r\n\r\n    /**\r\n     * Converts from world XY coordinates (pixels) to tile XY coordinates (tile units), factoring in the\r\n     * layers position, scale and scroll. This will return a new Vector2 object or update the given\r\n     * `point` object.\r\n     *\r\n     * @method Phaser.Tilemaps.DynamicTilemapLayer#worldToTileXY\r\n     * @since 3.0.0\r\n     *\r\n     * @param {number} worldX - [description]\r\n     * @param {number} worldY - [description]\r\n     * @param {boolean} [snapToFloor=true] - Whether or not to round the tile coordinate down to the\r\n     * nearest integer.\r\n     * @param {Phaser.Math.Vector2} [point] - [description]\r\n     * @param {Phaser.Cameras.Scene2D.Camera} [camera=main camera] - [description]\r\n     *\r\n     * @return {Phaser.Math.Vector2}\r\n     */\r\n    worldToTileXY: function (worldX, worldY, snapToFloor, point, camera)\r\n    {\r\n        return TilemapComponents.WorldToTileXY(worldX, worldY, snapToFloor, point, camera, this.layer);\r\n    }\r\n\r\n});\r\n\r\nmodule.exports = DynamicTilemapLayer;\r\n"},"lineCount":null}},"hash":"48a9908ee51293181fff629a5d8841fa","cacheData":{"env":{}},"id":326}